{
  "description": "Generator information:\n- Generated from: /dns/resource-manager/Microsoft.Network/Dns/stable/2018-05-01/dns.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/TXT/{relativeRecordSetName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "AAAARecords": {
          "description": "AAAARecords: The list of AAAA records in the record set.",
          "items": {
            "description": "An AAAA record.",
            "properties": {
              "ipv6Address": {
                "description": "Ipv6Address: The IPv6 address of this AAAA record.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "ARecords": {
          "description": "ARecords: The list of A records in the record set.",
          "items": {
            "description": "An A record.",
            "properties": {
              "ipv4Address": {
                "description": "Ipv4Address: The IPv4 address of this A record.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "CNAMERecord": {
          "description": "CNAMERecord: The CNAME record in the  record set.",
          "properties": {
            "cname": {
              "description": "Cname: The canonical name for this CNAME record.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "MXRecords": {
          "description": "MXRecords: The list of MX records in the record set.",
          "items": {
            "description": "An MX record.",
            "properties": {
              "exchange": {
                "description": "Exchange: The domain name of the mail host for this MX record.",
                "type": "string"
              },
              "preference": {
                "description": "Preference: The preference value for this MX record.",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "NSRecords": {
          "description": "NSRecords: The list of NS records in the record set.",
          "items": {
            "description": "An NS record.",
            "properties": {
              "nsdname": {
                "description": "Nsdname: The name server name for this NS record.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "PTRRecords": {
          "description": "PTRRecords: The list of PTR records in the record set.",
          "items": {
            "description": "A PTR record.",
            "properties": {
              "ptrdname": {
                "description": "Ptrdname: The PTR target domain name for this PTR record.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "SOARecord": {
          "description": "SOARecord: The SOA record in the record set.",
          "properties": {
            "email": {
              "description": "Email: The email contact for this SOA record.",
              "type": "string"
            },
            "expireTime": {
              "description": "ExpireTime: The expire time for this SOA record.",
              "type": "integer"
            },
            "host": {
              "description": "Host: The domain name of the authoritative name server for this SOA record.",
              "type": "string"
            },
            "minimumTTL": {
              "description": "MinimumTTL: The minimum value for this SOA record. By convention this is used to determine the negative caching duration.",
              "type": "integer"
            },
            "refreshTime": {
              "description": "RefreshTime: The refresh value for this SOA record.",
              "type": "integer"
            },
            "retryTime": {
              "description": "RetryTime: The retry time for this SOA record.",
              "type": "integer"
            },
            "serialNumber": {
              "description": "SerialNumber: The serial number for this SOA record.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "SRVRecords": {
          "description": "SRVRecords: The list of SRV records in the record set.",
          "items": {
            "description": "An SRV record.",
            "properties": {
              "port": {
                "description": "Port: The port value for this SRV record.",
                "type": "integer"
              },
              "priority": {
                "description": "Priority: The priority value for this SRV record.",
                "type": "integer"
              },
              "target": {
                "description": "Target: The target domain name for this SRV record.",
                "type": "string"
              },
              "weight": {
                "description": "Weight: The weight value for this SRV record.",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "TTL": {
          "description": "TTL: The TTL (time-to-live) of the records in the record set.",
          "type": "integer"
        },
        "TXTRecords": {
          "description": "TXTRecords: The list of TXT records in the record set.",
          "items": {
            "description": "A TXT record.",
            "properties": {
              "value": {
                "description": "Value: The text value of this TXT record.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "caaRecords": {
          "description": "CaaRecords: The list of CAA records in the record set.",
          "items": {
            "description": "A CAA record.",
            "properties": {
              "flags": {
                "description": "Flags: The flags for this CAA record as an integer between 0 and 255.",
                "type": "integer"
              },
              "tag": {
                "description": "Tag: The tag for this CAA record.",
                "type": "string"
              },
              "value": {
                "description": "Value: The value for this CAA record.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata: The metadata attached to the record set.",
          "type": "object"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a network.azure.com/DnsZone resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "targetResource": {
          "description": "TargetResource: A reference to an azure resource from where the dns resource value is taken.",
          "properties": {
            "reference": {
              "description": "Reference: Resource Id.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "properties": {
        "AAAARecords": {
          "description": "AAAARecords: The list of AAAA records in the record set.",
          "items": {
            "description": "An AAAA record.",
            "properties": {
              "ipv6Address": {
                "description": "Ipv6Address: The IPv6 address of this AAAA record.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "ARecords": {
          "description": "ARecords: The list of A records in the record set.",
          "items": {
            "description": "An A record.",
            "properties": {
              "ipv4Address": {
                "description": "Ipv4Address: The IPv4 address of this A record.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "CNAMERecord": {
          "description": "CNAMERecord: The CNAME record in the  record set.",
          "properties": {
            "cname": {
              "description": "Cname: The canonical name for this CNAME record.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "MXRecords": {
          "description": "MXRecords: The list of MX records in the record set.",
          "items": {
            "description": "An MX record.",
            "properties": {
              "exchange": {
                "description": "Exchange: The domain name of the mail host for this MX record.",
                "type": "string"
              },
              "preference": {
                "description": "Preference: The preference value for this MX record.",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "NSRecords": {
          "description": "NSRecords: The list of NS records in the record set.",
          "items": {
            "description": "An NS record.",
            "properties": {
              "nsdname": {
                "description": "Nsdname: The name server name for this NS record.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "PTRRecords": {
          "description": "PTRRecords: The list of PTR records in the record set.",
          "items": {
            "description": "A PTR record.",
            "properties": {
              "ptrdname": {
                "description": "Ptrdname: The PTR target domain name for this PTR record.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "SOARecord": {
          "description": "SOARecord: The SOA record in the record set.",
          "properties": {
            "email": {
              "description": "Email: The email contact for this SOA record.",
              "type": "string"
            },
            "expireTime": {
              "description": "ExpireTime: The expire time for this SOA record.",
              "type": "integer"
            },
            "host": {
              "description": "Host: The domain name of the authoritative name server for this SOA record.",
              "type": "string"
            },
            "minimumTTL": {
              "description": "MinimumTTL: The minimum value for this SOA record. By convention this is used to determine the negative caching duration.",
              "type": "integer"
            },
            "refreshTime": {
              "description": "RefreshTime: The refresh value for this SOA record.",
              "type": "integer"
            },
            "retryTime": {
              "description": "RetryTime: The retry time for this SOA record.",
              "type": "integer"
            },
            "serialNumber": {
              "description": "SerialNumber: The serial number for this SOA record.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "SRVRecords": {
          "description": "SRVRecords: The list of SRV records in the record set.",
          "items": {
            "description": "An SRV record.",
            "properties": {
              "port": {
                "description": "Port: The port value for this SRV record.",
                "type": "integer"
              },
              "priority": {
                "description": "Priority: The priority value for this SRV record.",
                "type": "integer"
              },
              "target": {
                "description": "Target: The target domain name for this SRV record.",
                "type": "string"
              },
              "weight": {
                "description": "Weight: The weight value for this SRV record.",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "TTL": {
          "description": "TTL: The TTL (time-to-live) of the records in the record set.",
          "type": "integer"
        },
        "TXTRecords": {
          "description": "TXTRecords: The list of TXT records in the record set.",
          "items": {
            "description": "A TXT record.",
            "properties": {
              "value": {
                "description": "Value: The text value of this TXT record.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "caaRecords": {
          "description": "CaaRecords: The list of CAA records in the record set.",
          "items": {
            "description": "A CAA record.",
            "properties": {
              "flags": {
                "description": "Flags: The flags for this CAA record as an integer between 0 and 255.",
                "type": "integer"
              },
              "tag": {
                "description": "Tag: The tag for this CAA record.",
                "type": "string"
              },
              "value": {
                "description": "Value: The value for this CAA record.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "etag": {
          "description": "Etag: The etag of the record set.",
          "type": "string"
        },
        "fqdn": {
          "description": "Fqdn: Fully qualified domain name of the record set.",
          "type": "string"
        },
        "id": {
          "description": "Id: The ID of the record set.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata: The metadata attached to the record set.",
          "type": "object"
        },
        "name": {
          "description": "Name: The name of the record set.",
          "type": "string"
        },
        "provisioningState": {
          "description": "ProvisioningState: provisioning State of the record set.",
          "type": "string"
        },
        "targetResource": {
          "description": "TargetResource: A reference to an azure resource from where the dns resource value is taken.",
          "properties": {
            "id": {
              "description": "Id: Resource Id.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "Type: The type of the record set.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Storage version of v1api20180501.DnsZonesTXTRecord\nGenerator information:\n- Generated from: /dns/resource-manager/Microsoft.Network/Dns/stable/2018-05-01/dns.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/TXT/{relativeRecordSetName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Storage version of v1api20180501.DnsZonesTXTRecord_Spec",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "AAAARecords": {
          "items": {
            "description": "Storage version of v1api20180501.AaaaRecord\nAn AAAA record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "ipv6Address": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "ARecords": {
          "items": {
            "description": "Storage version of v1api20180501.ARecord\nAn A record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "ipv4Address": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "CNAMERecord": {
          "description": "Storage version of v1api20180501.CnameRecord\nA CNAME record.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "cname": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "MXRecords": {
          "items": {
            "description": "Storage version of v1api20180501.MxRecord\nAn MX record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "exchange": {
                "type": "string"
              },
              "preference": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "NSRecords": {
          "items": {
            "description": "Storage version of v1api20180501.NsRecord\nAn NS record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "nsdname": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "PTRRecords": {
          "items": {
            "description": "Storage version of v1api20180501.PtrRecord\nA PTR record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "ptrdname": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "SOARecord": {
          "description": "Storage version of v1api20180501.SoaRecord\nAn SOA record.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "email": {
              "type": "string"
            },
            "expireTime": {
              "type": "integer"
            },
            "host": {
              "type": "string"
            },
            "minimumTTL": {
              "type": "integer"
            },
            "refreshTime": {
              "type": "integer"
            },
            "retryTime": {
              "type": "integer"
            },
            "serialNumber": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "SRVRecords": {
          "items": {
            "description": "Storage version of v1api20180501.SrvRecord\nAn SRV record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "port": {
                "type": "integer"
              },
              "priority": {
                "type": "integer"
              },
              "target": {
                "type": "string"
              },
              "weight": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "TTL": {
          "type": "integer"
        },
        "TXTRecords": {
          "items": {
            "description": "Storage version of v1api20180501.TxtRecord\nA TXT record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "value": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "caaRecords": {
          "items": {
            "description": "Storage version of v1api20180501.CaaRecord\nA CAA record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "flags": {
                "type": "integer"
              },
              "tag": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "operatorSpec": {
          "description": "Storage version of v1api20180501.DnsZonesTXTRecordOperatorSpec\nDetails for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "configMapExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "originalVersion": {
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a network.azure.com/DnsZone resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "targetResource": {
          "description": "Storage version of v1api20180501.SubResource\nA reference to a another resource",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "reference": {
              "description": "Reference: Resource Id.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "description": "Storage version of v1api20180501.DnsZonesTXTRecord_STATUS",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "AAAARecords": {
          "items": {
            "description": "Storage version of v1api20180501.AaaaRecord_STATUS\nAn AAAA record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "ipv6Address": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "ARecords": {
          "items": {
            "description": "Storage version of v1api20180501.ARecord_STATUS\nAn A record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "ipv4Address": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "CNAMERecord": {
          "description": "Storage version of v1api20180501.CnameRecord_STATUS\nA CNAME record.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "cname": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "MXRecords": {
          "items": {
            "description": "Storage version of v1api20180501.MxRecord_STATUS\nAn MX record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "exchange": {
                "type": "string"
              },
              "preference": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "NSRecords": {
          "items": {
            "description": "Storage version of v1api20180501.NsRecord_STATUS\nAn NS record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "nsdname": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "PTRRecords": {
          "items": {
            "description": "Storage version of v1api20180501.PtrRecord_STATUS\nA PTR record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "ptrdname": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "SOARecord": {
          "description": "Storage version of v1api20180501.SoaRecord_STATUS\nAn SOA record.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "email": {
              "type": "string"
            },
            "expireTime": {
              "type": "integer"
            },
            "host": {
              "type": "string"
            },
            "minimumTTL": {
              "type": "integer"
            },
            "refreshTime": {
              "type": "integer"
            },
            "retryTime": {
              "type": "integer"
            },
            "serialNumber": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "SRVRecords": {
          "items": {
            "description": "Storage version of v1api20180501.SrvRecord_STATUS\nAn SRV record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "port": {
                "type": "integer"
              },
              "priority": {
                "type": "integer"
              },
              "target": {
                "type": "string"
              },
              "weight": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "TTL": {
          "type": "integer"
        },
        "TXTRecords": {
          "items": {
            "description": "Storage version of v1api20180501.TxtRecord_STATUS\nA TXT record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "value": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "caaRecords": {
          "items": {
            "description": "Storage version of v1api20180501.CaaRecord_STATUS\nA CAA record.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "flags": {
                "type": "integer"
              },
              "tag": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "conditions": {
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "etag": {
          "type": "string"
        },
        "fqdn": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "provisioningState": {
          "type": "string"
        },
        "targetResource": {
          "description": "Storage version of v1api20180501.SubResource_STATUS\nA reference to a another resource",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "id": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
