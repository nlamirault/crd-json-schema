{
  "description": "Generator information:\n- Generated from: /network/resource-manager/Microsoft.Network/stable/2024-10-01/networkWatcher.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled: Flag to enable/disable flow logging.",
          "type": "boolean"
        },
        "enabledFilteringCriteria": {
          "description": "EnabledFilteringCriteria: Optional field to filter network traffic logs based on SrcIP, SrcPort, DstIP, DstPort,\nProtocol, Encryption, Direction and Action. If not specified, all network traffic will be logged.",
          "type": "string"
        },
        "flowAnalyticsConfiguration": {
          "description": "FlowAnalyticsConfiguration: Parameters that define the configuration of traffic analytics.",
          "properties": {
            "networkWatcherFlowAnalyticsConfiguration": {
              "description": "NetworkWatcherFlowAnalyticsConfiguration: Parameters that define the configuration of traffic analytics.",
              "properties": {
                "enabled": {
                  "description": "Enabled: Flag to enable/disable traffic analytics.",
                  "type": "boolean"
                },
                "trafficAnalyticsInterval": {
                  "description": "TrafficAnalyticsInterval: The interval in minutes which would decide how frequently TA service should do flow analytics.",
                  "type": "integer"
                },
                "workspaceRegion": {
                  "description": "WorkspaceRegion: The location of the attached workspace.",
                  "type": "string"
                },
                "workspaceResourceReference": {
                  "description": "WorkspaceResourceReference: Resource Id of the attached workspace.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "format": {
          "description": "Format: Parameters that define the flow log format.",
          "properties": {
            "type": {
              "description": "Type: The file type of flow log.",
              "enum": [
                "JSON"
              ],
              "type": "string"
            },
            "version": {
              "description": "Version: The version (revision) of the flow log.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "identity": {
          "description": "Identity: FlowLog resource Managed Identity",
          "properties": {
            "type": {
              "description": "Type: The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly\ncreated identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual\nmachine.",
              "enum": [
                "None",
                "SystemAssigned",
                "SystemAssigned, UserAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "UserAssignedIdentities: The list of user identities associated with resource. The user identity dictionary key\nreferences will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
              "items": {
                "description": "Information about the user assigned identity for the resource",
                "properties": {
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a network.azure.com/NetworkWatcher resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "retentionPolicy": {
          "description": "RetentionPolicy: Parameters that define the retention policy for flow log.",
          "properties": {
            "days": {
              "description": "Days: Number of days to retain flow log records.",
              "type": "integer"
            },
            "enabled": {
              "description": "Enabled: Flag to enable/disable retention.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "storageReference": {
          "description": "StorageReference: ID of the storage account which is used to store the flow log.",
          "properties": {
            "armId": {
              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "Name is the Kubernetes name of the resource.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "targetResourceReference": {
          "description": "TargetResourceReference: ID of network security group to which flow log will be applied.",
          "properties": {
            "armId": {
              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "Name is the Kubernetes name of the resource.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "owner",
        "storageReference",
        "targetResourceReference"
      ],
      "type": "object"
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "enabled": {
          "description": "Enabled: Flag to enable/disable flow logging.",
          "type": "boolean"
        },
        "enabledFilteringCriteria": {
          "description": "EnabledFilteringCriteria: Optional field to filter network traffic logs based on SrcIP, SrcPort, DstIP, DstPort,\nProtocol, Encryption, Direction and Action. If not specified, all network traffic will be logged.",
          "type": "string"
        },
        "etag": {
          "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
          "type": "string"
        },
        "flowAnalyticsConfiguration": {
          "description": "FlowAnalyticsConfiguration: Parameters that define the configuration of traffic analytics.",
          "properties": {
            "networkWatcherFlowAnalyticsConfiguration": {
              "description": "NetworkWatcherFlowAnalyticsConfiguration: Parameters that define the configuration of traffic analytics.",
              "properties": {
                "enabled": {
                  "description": "Enabled: Flag to enable/disable traffic analytics.",
                  "type": "boolean"
                },
                "trafficAnalyticsInterval": {
                  "description": "TrafficAnalyticsInterval: The interval in minutes which would decide how frequently TA service should do flow analytics.",
                  "type": "integer"
                },
                "workspaceId": {
                  "description": "WorkspaceId: The resource guid of the attached workspace.",
                  "type": "string"
                },
                "workspaceRegion": {
                  "description": "WorkspaceRegion: The location of the attached workspace.",
                  "type": "string"
                },
                "workspaceResourceId": {
                  "description": "WorkspaceResourceId: Resource Id of the attached workspace.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "format": {
          "description": "Format: Parameters that define the flow log format.",
          "properties": {
            "type": {
              "description": "Type: The file type of flow log.",
              "type": "string"
            },
            "version": {
              "description": "Version: The version (revision) of the flow log.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "Id: Resource ID.",
          "type": "string"
        },
        "identity": {
          "description": "Identity: FlowLog resource Managed Identity",
          "properties": {
            "principalId": {
              "description": "PrincipalId: The principal id of the system assigned identity. This property will only be provided for a system assigned\nidentity.",
              "type": "string"
            },
            "tenantId": {
              "description": "TenantId: The tenant id of the system assigned identity. This property will only be provided for a system assigned\nidentity.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly\ncreated identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual\nmachine.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "properties": {
                  "clientId": {
                    "description": "ClientId: The client id of user assigned identity.",
                    "type": "string"
                  },
                  "principalId": {
                    "description": "PrincipalId: The principal id of user assigned identity.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": "UserAssignedIdentities: The list of user identities associated with resource. The user identity dictionary key\nreferences will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
              "type": "object"
            }
          },
          "type": "object"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "name": {
          "description": "Name: Resource name.",
          "type": "string"
        },
        "provisioningState": {
          "description": "ProvisioningState: The provisioning state of the flow log.",
          "type": "string"
        },
        "retentionPolicy": {
          "description": "RetentionPolicy: Parameters that define the retention policy for flow log.",
          "properties": {
            "days": {
              "description": "Days: Number of days to retain flow log records.",
              "type": "integer"
            },
            "enabled": {
              "description": "Enabled: Flag to enable/disable retention.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "storageId": {
          "description": "StorageId: ID of the storage account which is used to store the flow log.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "targetResourceGuid": {
          "description": "TargetResourceGuid: Guid of network security group to which flow log will be applied.",
          "type": "string"
        },
        "targetResourceId": {
          "description": "TargetResourceId: ID of network security group to which flow log will be applied.",
          "type": "string"
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Storage version of v1api20241001.NetworkWatchersFlowLog\nGenerator information:\n- Generated from: /network/resource-manager/Microsoft.Network/stable/2024-10-01/networkWatcher.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Storage version of v1api20241001.NetworkWatchersFlowLog_Spec",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "enabledFilteringCriteria": {
          "type": "string"
        },
        "flowAnalyticsConfiguration": {
          "description": "Storage version of v1api20241001.TrafficAnalyticsProperties\nParameters that define the configuration of traffic analytics.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "networkWatcherFlowAnalyticsConfiguration": {
              "description": "Storage version of v1api20241001.TrafficAnalyticsConfigurationProperties\nParameters that define the configuration of traffic analytics.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "enabled": {
                  "type": "boolean"
                },
                "trafficAnalyticsInterval": {
                  "type": "integer"
                },
                "workspaceRegion": {
                  "type": "string"
                },
                "workspaceResourceReference": {
                  "description": "WorkspaceResourceReference: Resource Id of the attached workspace.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "format": {
          "description": "Storage version of v1api20241001.FlowLogFormatParameters\nParameters that define the flow log format.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "type": {
              "type": "string"
            },
            "version": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "identity": {
          "description": "Storage version of v1api20241001.ManagedServiceIdentity\nIdentity for the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "type": {
              "type": "string"
            },
            "userAssignedIdentities": {
              "items": {
                "description": "Storage version of v1api20241001.UserAssignedIdentityDetails\nInformation about the user assigned identity for the resource",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "location": {
          "type": "string"
        },
        "operatorSpec": {
          "description": "Storage version of v1api20241001.NetworkWatchersFlowLogOperatorSpec\nDetails for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "configMapExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "originalVersion": {
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a network.azure.com/NetworkWatcher resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "retentionPolicy": {
          "description": "Storage version of v1api20241001.RetentionPolicyParameters\nParameters that define the retention policy for flow log.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "days": {
              "type": "integer"
            },
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "storageReference": {
          "description": "StorageReference: ID of the storage account which is used to store the flow log.",
          "properties": {
            "armId": {
              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "Name is the Kubernetes name of the resource.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "targetResourceReference": {
          "description": "TargetResourceReference: ID of network security group to which flow log will be applied.",
          "properties": {
            "armId": {
              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "Name is the Kubernetes name of the resource.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "owner",
        "storageReference",
        "targetResourceReference"
      ],
      "type": "object"
    },
    "status": {
      "description": "Storage version of v1api20241001.NetworkWatchersFlowLog_STATUS",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "conditions": {
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "enabled": {
          "type": "boolean"
        },
        "enabledFilteringCriteria": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "flowAnalyticsConfiguration": {
          "description": "Storage version of v1api20241001.TrafficAnalyticsProperties_STATUS\nParameters that define the configuration of traffic analytics.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "networkWatcherFlowAnalyticsConfiguration": {
              "description": "Storage version of v1api20241001.TrafficAnalyticsConfigurationProperties_STATUS\nParameters that define the configuration of traffic analytics.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "enabled": {
                  "type": "boolean"
                },
                "trafficAnalyticsInterval": {
                  "type": "integer"
                },
                "workspaceId": {
                  "type": "string"
                },
                "workspaceRegion": {
                  "type": "string"
                },
                "workspaceResourceId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "format": {
          "description": "Storage version of v1api20241001.FlowLogFormatParameters_STATUS\nParameters that define the flow log format.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "type": {
              "type": "string"
            },
            "version": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "identity": {
          "description": "Storage version of v1api20241001.ManagedServiceIdentity_STATUS\nIdentity for the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "principalId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "description": "Storage version of v1api20241001.ManagedServiceIdentity_UserAssignedIdentities_STATUS",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "principalId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "provisioningState": {
          "type": "string"
        },
        "retentionPolicy": {
          "description": "Storage version of v1api20241001.RetentionPolicyParameters_STATUS\nParameters that define the retention policy for flow log.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "days": {
              "type": "integer"
            },
            "enabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "storageId": {
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "targetResourceGuid": {
          "type": "string"
        },
        "targetResourceId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
