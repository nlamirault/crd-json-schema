{
  "description": "Generator information:\n- Generated from: /quota/resource-manager/Microsoft.Quota/Quota/stable/2025-09-01/openapi.json\n- ARM URI: /{scope}/providers/Microsoft.Quota/quotas/{resourceName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an\nextension resource, which means that any other Azure resource can be its owner.",
          "properties": {
            "armId": {
              "description": "Ownership across namespaces is not supported.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "properties": {
          "description": "Properties: Quota properties for the specified resource, based on the API called, Quotas or Usages.",
          "properties": {
            "limit": {
              "description": "Limit: Resource quota limit properties.",
              "properties": {
                "limitValue": {
                  "description": "LimitValue: Mutually exclusive with all other properties",
                  "properties": {
                    "limitObjectType": {
                      "description": "LimitObjectType: The limit object type.",
                      "enum": [
                        "LimitValue"
                      ],
                      "type": "string"
                    },
                    "limitType": {
                      "description": "LimitType: The quota or usages limit types.",
                      "enum": [
                        "Independent",
                        "Shared"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "Value: The quota/limit value",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "limitObjectType",
                    "value"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "name": {
              "description": "Name: Resource name provided by the resource provider. Use this property name when requesting quota.",
              "properties": {
                "value": {
                  "description": "Value: Resource name.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "properties": {
              "description": "Properties: Additional properties for the specific resource provider.",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "resourceType": {
              "description": "ResourceType: The name of the resource type. Optional field.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. E.g.\n\"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "type": "string"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "properties": {
          "description": "Properties: Quota properties for the specified resource, based on the API called, Quotas or Usages.",
          "properties": {
            "isQuotaApplicable": {
              "description": "IsQuotaApplicable: States if quota can be requested for this resource.",
              "type": "boolean"
            },
            "limit": {
              "description": "Limit: Resource quota limit properties.",
              "properties": {
                "limitValue": {
                  "description": "LimitValue: Mutually exclusive with all other properties",
                  "properties": {
                    "limitObjectType": {
                      "description": "LimitObjectType: The limit object type.",
                      "type": "string"
                    },
                    "limitType": {
                      "description": "LimitType: The quota or usages limit types.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value: The quota/limit value",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "name": {
              "description": "Name: Resource name provided by the resource provider. Use this property name when requesting quota.",
              "properties": {
                "localizedValue": {
                  "description": "LocalizedValue: Resource display name.",
                  "type": "string"
                },
                "value": {
                  "description": "Value: Resource name.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "properties": {
              "description": "Properties: Additional properties for the specific resource provider.",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "quotaPeriod": {
              "description": "QuotaPeriod: The time period over which the quota usage values are summarized. For example:\n*P1D (per one day)\n*PT1M (per one minute)\n*PT1S (per one second).\nThis parameter is optional because, for some resources like compute, the period is irrelevant.",
              "type": "string"
            },
            "resourceType": {
              "description": "ResourceType: The name of the resource type. Optional field.",
              "type": "string"
            },
            "unit": {
              "description": "Unit: The quota units, such as Count and Bytes. When requesting quota, use the unit value returned in the GET response\nin the request body of your PUT operation.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "systemData": {
          "description": "SystemData: Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource.",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The timestamp of resource last modification (UTC)",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Storage version of v1api20250901.Quota\nGenerator information:\n- Generated from: /quota/resource-manager/Microsoft.Quota/Quota/stable/2025-09-01/openapi.json\n- ARM URI: /{scope}/providers/Microsoft.Quota/quotas/{resourceName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Storage version of v1api20250901.Quota_Spec",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "operatorSpec": {
          "description": "Storage version of v1api20250901.QuotaOperatorSpec\nDetails for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "configMapExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "originalVersion": {
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an\nextension resource, which means that any other Azure resource can be its owner.",
          "properties": {
            "armId": {
              "description": "Ownership across namespaces is not supported.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "properties": {
          "description": "Storage version of v1api20250901.QuotaProperties\nQuota properties for the specified resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "limit": {
              "description": "Storage version of v1api20250901.LimitJsonObject",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "limitValue": {
                  "description": "Storage version of v1api20250901.LimitObject",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "limitObjectType": {
                      "type": "string"
                    },
                    "limitType": {
                      "type": "string"
                    },
                    "value": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "name": {
              "description": "Storage version of v1api20250901.ResourceName\nName of the resource provided by the resource Provider. When requesting quota, use this property name.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "properties": {
              "x-kubernetes-preserve-unknown-fields": true
            },
            "resourceType": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "description": "Storage version of v1api20250901.Quota_STATUS",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "conditions": {
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "description": "Storage version of v1api20250901.QuotaProperties_STATUS\nQuota properties for the specified resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "isQuotaApplicable": {
              "type": "boolean"
            },
            "limit": {
              "description": "Storage version of v1api20250901.LimitJsonObject_STATUS",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "limitValue": {
                  "description": "Storage version of v1api20250901.LimitObject_STATUS",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "limitObjectType": {
                      "type": "string"
                    },
                    "limitType": {
                      "type": "string"
                    },
                    "value": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "name": {
              "description": "Storage version of v1api20250901.ResourceName_STATUS\nName of the resource provided by the resource Provider. When requesting quota, use this property name.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "localizedValue": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "properties": {
              "x-kubernetes-preserve-unknown-fields": true
            },
            "quotaPeriod": {
              "type": "string"
            },
            "resourceType": {
              "type": "string"
            },
            "unit": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "systemData": {
          "description": "Storage version of v1api20250901.SystemData_STATUS\nMetadata pertaining to creation and last modification of the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "createdAt": {
              "type": "string"
            },
            "createdBy": {
              "type": "string"
            },
            "createdByType": {
              "type": "string"
            },
            "lastModifiedAt": {
              "type": "string"
            },
            "lastModifiedBy": {
              "type": "string"
            },
            "lastModifiedByType": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
