{
  "description": "Generator information:\n- Generated from: /storage/resource-manager/Microsoft.Storage/stable/2021-04-01/storage.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "accessTier": {
          "description": "AccessTier: Required for storage accounts where kind = BlobStorage. The access tier used for billing.",
          "enum": [
            "Cool",
            "Hot"
          ],
          "type": "string"
        },
        "allowBlobPublicAccess": {
          "description": "AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default\ninterpretation is true for this property.",
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "description": "AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. The default interpretation is true\nfor this property.",
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "description": "AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access\nkey via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure\nActive Directory (Azure AD). The default value is null, which is equivalent to true.",
          "type": "boolean"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "AzureFilesIdentityBasedAuthentication: Provides the identity based authentication settings for Azure Files.",
          "properties": {
            "activeDirectoryProperties": {
              "description": "ActiveDirectoryProperties: Required if choose AD.",
              "properties": {
                "azureStorageSid": {
                  "description": "AzureStorageSid: Specifies the security identifier (SID) for Azure Storage.",
                  "type": "string"
                },
                "domainGuid": {
                  "description": "DomainGuid: Specifies the domain GUID.",
                  "type": "string"
                },
                "domainName": {
                  "description": "DomainName: Specifies the primary domain that the AD DNS server is authoritative for.",
                  "type": "string"
                },
                "domainSid": {
                  "description": "DomainSid: Specifies the security identifier (SID).",
                  "type": "string"
                },
                "forestName": {
                  "description": "ForestName: Specifies the Active Directory forest to get.",
                  "type": "string"
                },
                "netBiosDomainName": {
                  "description": "NetBiosDomainName: Specifies the NetBIOS domain name.",
                  "type": "string"
                }
              },
              "required": [
                "azureStorageSid",
                "domainGuid",
                "domainName",
                "domainSid",
                "forestName",
                "netBiosDomainName"
              ],
              "type": "object"
            },
            "defaultSharePermission": {
              "description": "DefaultSharePermission: Default share permission for users using Kerberos authentication if RBAC role is not assigned.",
              "enum": [
                "None",
                "StorageFileDataSmbShareContributor",
                "StorageFileDataSmbShareElevatedContributor",
                "StorageFileDataSmbShareOwner",
                "StorageFileDataSmbShareReader"
              ],
              "type": "string"
            },
            "directoryServiceOptions": {
              "description": "DirectoryServiceOptions: Indicates the directory service used.",
              "enum": [
                "AADDS",
                "AD",
                "None"
              ],
              "type": "string"
            }
          },
          "required": [
            "directoryServiceOptions"
          ],
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "customDomain": {
          "description": "CustomDomain: User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported\nper storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name\nproperty.",
          "properties": {
            "name": {
              "description": "Name: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
              "type": "string"
            },
            "useSubDomainName": {
              "description": "UseSubDomainName: Indicates whether indirect CName validation is enabled. Default value is false. This should only be\nset on updates.",
              "type": "boolean"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "encryption": {
          "description": "Encryption: Not applicable. Azure Storage encryption is enabled for all storage accounts and cannot be disabled.",
          "properties": {
            "identity": {
              "description": "Identity: The identity to be used with service-side encryption at rest.",
              "properties": {
                "userAssignedIdentityReference": {
                  "description": "UserAssignedIdentityReference: Resource identifier of the UserAssigned identity to be associated with server-side\nencryption on the storage account.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "keySource": {
              "description": "KeySource: The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage,\nMicrosoft.Keyvault",
              "enum": [
                "Microsoft.Keyvault",
                "Microsoft.Storage"
              ],
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Keyvaultproperties: Properties provided by key vault.",
              "properties": {
                "keyname": {
                  "description": "Keyname: The name of KeyVault key.",
                  "type": "string"
                },
                "keyvaulturi": {
                  "description": "Keyvaulturi: The Uri of KeyVault.",
                  "type": "string"
                },
                "keyversion": {
                  "description": "Keyversion: The version of KeyVault key.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "description": "RequireInfrastructureEncryption: A boolean indicating whether or not the service applies a secondary layer of encryption\nwith platform managed keys for data at rest.",
              "type": "boolean"
            },
            "services": {
              "description": "Services: List of services which support encryption.",
              "properties": {
                "blob": {
                  "description": "Blob: The encryption function of the blob storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "File: The encryption function of the file storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Queue: The encryption function of the queue storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Table: The encryption function of the table storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "keySource"
          ],
          "type": "object"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: Optional. Set the extended location of the resource. If not set, the storage account will be created\nin Azure main region. Otherwise it will be created in the specified extended location",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity": {
          "description": "Identity: The identity of the resource.",
          "properties": {
            "type": {
              "description": "Type: The identity type.",
              "enum": [
                "None",
                "SystemAssigned",
                "SystemAssigned,UserAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "UserAssignedIdentities: Gets or sets a list of key value pairs that describe the set of User Assigned identities that\nwill be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned\nidentity is permitted here.",
              "items": {
                "description": "Information about the user assigned identity for the resource",
                "properties": {
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        "isHnsEnabled": {
          "description": "IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.",
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "description": "IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.",
          "type": "boolean"
        },
        "keyPolicy": {
          "description": "KeyPolicy: KeyPolicy assigned to the storage account.",
          "properties": {
            "keyExpirationPeriodInDays": {
              "description": "KeyExpirationPeriodInDays: The key expiration period in days.",
              "type": "integer"
            }
          },
          "required": [
            "keyExpirationPeriodInDays"
          ],
          "type": "object"
        },
        "kind": {
          "description": "Kind: Required. Indicates the type of storage account.",
          "enum": [
            "BlobStorage",
            "BlockBlobStorage",
            "FileStorage",
            "Storage",
            "StorageV2"
          ],
          "type": "string"
        },
        "largeFileSharesState": {
          "description": "LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location: Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure\nGeo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is\ncreated, but if an identical geo region is specified on update, the request will succeed.",
          "type": "string"
        },
        "minimumTlsVersion": {
          "description": "MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS\n1.0 for this property.",
          "enum": [
            "TLS1_0",
            "TLS1_1",
            "TLS1_2"
          ],
          "type": "string"
        },
        "networkAcls": {
          "description": "NetworkAcls: Network rule set",
          "properties": {
            "bypass": {
              "description": "Bypass: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of\nLogging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
              "type": "string"
            },
            "defaultAction": {
              "description": "DefaultAction: Specifies the default action of allow or deny when no other rules match.",
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            "ipRules": {
              "description": "IpRules: Sets the IP ACL rules",
              "items": {
                "description": "IP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "action": {
                    "description": "Action: The action of IP ACL rule.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
                    "type": "string"
                  },
                  "valueFromConfig": {
                    "description": "ValueFromConfig: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
                    "properties": {
                      "key": {
                        "description": "Key is the key in the Kubernetes configmap being referenced",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the name of the Kubernetes configmap being referenced.\nThe configmap must be in the same namespace as the resource",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "description": "ResourceAccessRules: Sets the resource access rules",
              "items": {
                "description": "Resource Access Rule.",
                "properties": {
                  "resourceReference": {
                    "description": "ResourceReference: Resource Id",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "tenantId": {
                    "description": "TenantId: Tenant Id",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "description": "VirtualNetworkRules: Sets the virtual network rules",
              "items": {
                "description": "Virtual Network rule.",
                "properties": {
                  "action": {
                    "description": "Action: The action of virtual network rule.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string"
                  },
                  "reference": {
                    "description": "Reference: Resource ID of a subnet, for example:\n/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "description": "State: Gets the state of virtual network rule.",
                    "enum": [
                      "Deprovisioning",
                      "Failed",
                      "NetworkSourceDeleted",
                      "Provisioning",
                      "Succeeded"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "reference"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "defaultAction"
          ],
          "type": "object"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "configMaps": {
              "description": "ConfigMaps: configures where to place operator written ConfigMaps.",
              "properties": {
                "blobEndpoint": {
                  "description": "BlobEndpoint: indicates where the BlobEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "DfsEndpoint: indicates where the DfsEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "FileEndpoint: indicates where the FileEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "QueueEndpoint: indicates where the QueueEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "TableEndpoint: indicates where the TableEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "WebEndpoint: indicates where the WebEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secrets": {
              "description": "Secrets: configures where to place Azure generated secrets.",
              "properties": {
                "blobEndpoint": {
                  "description": "BlobEndpoint: indicates where the BlobEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "DfsEndpoint: indicates where the DfsEndpoint secret should be placed. If omitted, the secret will not be retrieved from\nAzure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "FileEndpoint: indicates where the FileEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key1": {
                  "description": "Key1: indicates where the Key1 secret should be placed. If omitted, the secret will not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key2": {
                  "description": "Key2: indicates where the Key2 secret should be placed. If omitted, the secret will not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "QueueEndpoint: indicates where the QueueEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "TableEndpoint: indicates where the TableEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "WebEndpoint: indicates where the WebEndpoint secret should be placed. If omitted, the secret will not be retrieved from\nAzure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "routingPreference": {
          "description": "RoutingPreference: Maintains information about the network routing choice opted by the user for data transfer",
          "properties": {
            "publishInternetEndpoints": {
              "description": "PublishInternetEndpoints: A boolean flag which indicates whether internet routing storage endpoints are to be published",
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "description": "PublishMicrosoftEndpoints: A boolean flag which indicates whether microsoft routing storage endpoints are to be published",
              "type": "boolean"
            },
            "routingChoice": {
              "description": "RoutingChoice: Routing Choice defines the kind of network routing opted by the user.",
              "enum": [
                "InternetRouting",
                "MicrosoftRouting"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "SasPolicy: SasPolicy assigned to the storage account.",
          "properties": {
            "expirationAction": {
              "description": "ExpirationAction: The SAS expiration action. Can only be Log.",
              "enum": [
                "Log"
              ],
              "type": "string"
            },
            "sasExpirationPeriod": {
              "description": "SasExpirationPeriod: The SAS expiration period, DD.HH:MM:SS.",
              "type": "string"
            }
          },
          "required": [
            "expirationAction",
            "sasExpirationPeriod"
          ],
          "type": "object"
        },
        "sku": {
          "description": "Sku: Required. Gets or sets the SKU name.",
          "properties": {
            "name": {
              "description": "Name: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called\n accountType.",
              "enum": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
              ],
              "type": "string"
            },
            "tier": {
              "description": "Tier: The SKU tier. This is based on the SKU name.",
              "enum": [
                "Premium",
                "Standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "description": "SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true. The default value is true since\nAPI version 2019-04-01.",
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping\nthis resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key\nwith a length no greater than 128 characters and a value with a length no greater than 256 characters.",
          "type": "object"
        }
      },
      "required": [
        "kind",
        "location",
        "owner",
        "sku"
      ],
      "type": "object"
    },
    "status": {
      "description": "The storage account.",
      "properties": {
        "accessTier": {
          "description": "AccessTier: Required for storage accounts where kind = BlobStorage. The access tier used for billing.",
          "type": "string"
        },
        "allowBlobPublicAccess": {
          "description": "AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default\ninterpretation is true for this property.",
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "description": "AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. The default interpretation is true\nfor this property.",
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "description": "AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access\nkey via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure\nActive Directory (Azure AD). The default value is null, which is equivalent to true.",
          "type": "boolean"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "AzureFilesIdentityBasedAuthentication: Provides the identity based authentication settings for Azure Files.",
          "properties": {
            "activeDirectoryProperties": {
              "description": "ActiveDirectoryProperties: Required if choose AD.",
              "properties": {
                "azureStorageSid": {
                  "description": "AzureStorageSid: Specifies the security identifier (SID) for Azure Storage.",
                  "type": "string"
                },
                "domainGuid": {
                  "description": "DomainGuid: Specifies the domain GUID.",
                  "type": "string"
                },
                "domainName": {
                  "description": "DomainName: Specifies the primary domain that the AD DNS server is authoritative for.",
                  "type": "string"
                },
                "domainSid": {
                  "description": "DomainSid: Specifies the security identifier (SID).",
                  "type": "string"
                },
                "forestName": {
                  "description": "ForestName: Specifies the Active Directory forest to get.",
                  "type": "string"
                },
                "netBiosDomainName": {
                  "description": "NetBiosDomainName: Specifies the NetBIOS domain name.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "defaultSharePermission": {
              "description": "DefaultSharePermission: Default share permission for users using Kerberos authentication if RBAC role is not assigned.",
              "type": "string"
            },
            "directoryServiceOptions": {
              "description": "DirectoryServiceOptions: Indicates the directory service used.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "blobRestoreStatus": {
          "description": "BlobRestoreStatus: Blob restore status",
          "properties": {
            "failureReason": {
              "description": "FailureReason: Failure reason when blob restore is failed.",
              "type": "string"
            },
            "parameters": {
              "description": "Parameters: Blob restore request parameters.",
              "properties": {
                "blobRanges": {
                  "description": "BlobRanges: Blob ranges to restore.",
                  "items": {
                    "description": "Blob range",
                    "properties": {
                      "endRange": {
                        "description": "EndRange: Blob end range. This is exclusive. Empty means account end.",
                        "type": "string"
                      },
                      "startRange": {
                        "description": "StartRange: Blob start range. This is inclusive. Empty means account start.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "timeToRestore": {
                  "description": "TimeToRestore: Restore blob to the specified time.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "restoreId": {
              "description": "RestoreId: Id for tracking blob restore request.",
              "type": "string"
            },
            "status": {
              "description": "Status: The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing.\n- Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "creationTime": {
          "description": "CreationTime: Gets the creation date and time of the storage account in UTC.",
          "type": "string"
        },
        "customDomain": {
          "description": "CustomDomain: Gets the custom domain the user assigned to this storage account.",
          "properties": {
            "name": {
              "description": "Name: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
              "type": "string"
            },
            "useSubDomainName": {
              "description": "UseSubDomainName: Indicates whether indirect CName validation is enabled. Default value is false. This should only be\nset on updates.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "encryption": {
          "description": "Encryption: Gets the encryption settings on the account. If unspecified, the account is unencrypted.",
          "properties": {
            "identity": {
              "description": "Identity: The identity to be used with service-side encryption at rest.",
              "properties": {
                "userAssignedIdentity": {
                  "description": "UserAssignedIdentity: Resource identifier of the UserAssigned identity to be associated with server-side encryption on\nthe storage account.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "keySource": {
              "description": "KeySource: The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage,\nMicrosoft.Keyvault",
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Keyvaultproperties: Properties provided by key vault.",
              "properties": {
                "currentVersionedKeyIdentifier": {
                  "description": "CurrentVersionedKeyIdentifier: The object identifier of the current versioned Key Vault Key in use.",
                  "type": "string"
                },
                "keyname": {
                  "description": "Keyname: The name of KeyVault key.",
                  "type": "string"
                },
                "keyvaulturi": {
                  "description": "Keyvaulturi: The Uri of KeyVault.",
                  "type": "string"
                },
                "keyversion": {
                  "description": "Keyversion: The version of KeyVault key.",
                  "type": "string"
                },
                "lastKeyRotationTimestamp": {
                  "description": "LastKeyRotationTimestamp: Timestamp of last rotation of the Key Vault Key.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "description": "RequireInfrastructureEncryption: A boolean indicating whether or not the service applies a secondary layer of encryption\nwith platform managed keys for data at rest.",
              "type": "boolean"
            },
            "services": {
              "description": "Services: List of services which support encryption.",
              "properties": {
                "blob": {
                  "description": "Blob: The encryption function of the blob storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned\nwhen encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a\nrough estimate.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "File: The encryption function of the file storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned\nwhen encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a\nrough estimate.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Queue: The encryption function of the queue storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned\nwhen encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a\nrough estimate.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Table: The encryption function of the table storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned\nwhen encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a\nrough estimate.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extendedLocation of the resource.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "failoverInProgress": {
          "description": "FailoverInProgress: If the failover is in progress, the value will be true, otherwise, it will be null.",
          "type": "boolean"
        },
        "geoReplicationStats": {
          "description": "GeoReplicationStats: Geo Replication Stats",
          "properties": {
            "canFailover": {
              "description": "CanFailover: A boolean flag which indicates whether or not account failover is supported for the account.",
              "type": "boolean"
            },
            "lastSyncTime": {
              "description": "LastSyncTime: All primary writes preceding this UTC date/time value are guaranteed to be available for read operations.\nPrimary writes following this point in time may or may not be available for reads. Element may be default value if value\nof LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.",
              "type": "string"
            },
            "status": {
              "description": "Status: The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is\nactive and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary\nlocation is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the\nsecondary location is temporarily unavailable.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "identity": {
          "description": "Identity: The identity of the resource.",
          "properties": {
            "principalId": {
              "description": "PrincipalId: The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "TenantId: The tenant ID of resource.",
              "type": "string"
            },
            "type": {
              "description": "Type: The identity type.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "description": "UserAssignedIdentity for the resource.",
                "properties": {
                  "clientId": {
                    "description": "ClientId: The client ID of the identity.",
                    "type": "string"
                  },
                  "principalId": {
                    "description": "PrincipalId: The principal ID of the identity.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": "UserAssignedIdentities: Gets or sets a list of key value pairs that describe the set of User Assigned identities that\nwill be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned\nidentity is permitted here.",
              "type": "object"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "description": "IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.",
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "description": "IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.",
          "type": "boolean"
        },
        "keyCreationTime": {
          "description": "KeyCreationTime: Storage account keys creation time.",
          "properties": {
            "key1": {
              "type": "string"
            },
            "key2": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "keyPolicy": {
          "description": "KeyPolicy: KeyPolicy assigned to the storage account.",
          "properties": {
            "keyExpirationPeriodInDays": {
              "description": "KeyExpirationPeriodInDays: The key expiration period in days.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "kind": {
          "description": "Kind: Gets the Kind.",
          "type": "string"
        },
        "largeFileSharesState": {
          "description": "LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
          "type": "string"
        },
        "lastGeoFailoverTime": {
          "description": "LastGeoFailoverTime: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the\nmost recent timestamp is retained. This element is not returned if there has never been a failover instance. Only\navailable if the accountType is Standard_GRS or Standard_RAGRS.",
          "type": "string"
        },
        "location": {
          "description": "Location: The geo-location where the resource lives",
          "type": "string"
        },
        "minimumTlsVersion": {
          "description": "MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS\n1.0 for this property.",
          "type": "string"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "networkAcls": {
          "description": "NetworkAcls: Network rule set",
          "properties": {
            "bypass": {
              "description": "Bypass: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of\nLogging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
              "type": "string"
            },
            "defaultAction": {
              "description": "DefaultAction: Specifies the default action of allow or deny when no other rules match.",
              "type": "string"
            },
            "ipRules": {
              "description": "IpRules: Sets the IP ACL rules",
              "items": {
                "description": "IP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "action": {
                    "description": "Action: The action of IP ACL rule.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "description": "ResourceAccessRules: Sets the resource access rules",
              "items": {
                "description": "Resource Access Rule.",
                "properties": {
                  "resourceId": {
                    "description": "ResourceId: Resource Id",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "TenantId: Tenant Id",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "description": "VirtualNetworkRules: Sets the virtual network rules",
              "items": {
                "description": "Virtual Network rule.",
                "properties": {
                  "action": {
                    "description": "Action: The action of virtual network rule.",
                    "type": "string"
                  },
                  "id": {
                    "description": "Id: Resource ID of a subnet, for example:\n/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
                    "type": "string"
                  },
                  "state": {
                    "description": "State: Gets the state of virtual network rule.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "primaryEndpoints": {
          "description": "PrimaryEndpoints: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that\nStandard_ZRS and Premium_LRS accounts only return the blob endpoint.",
          "properties": {
            "blob": {
              "description": "Blob: Gets the blob endpoint.",
              "type": "string"
            },
            "dfs": {
              "description": "Dfs: Gets the dfs endpoint.",
              "type": "string"
            },
            "file": {
              "description": "File: Gets the file endpoint.",
              "type": "string"
            },
            "internetEndpoints": {
              "description": "InternetEndpoints: Gets the internet routing storage endpoints",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "MicrosoftEndpoints: Gets the microsoft routing storage endpoints.",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "queue": {
                  "description": "Queue: Gets the queue endpoint.",
                  "type": "string"
                },
                "table": {
                  "description": "Table: Gets the table endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "description": "Queue: Gets the queue endpoint.",
              "type": "string"
            },
            "table": {
              "description": "Table: Gets the table endpoint.",
              "type": "string"
            },
            "web": {
              "description": "Web: Gets the web endpoint.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "primaryLocation": {
          "description": "PrimaryLocation: Gets the location of the primary data center for the storage account.",
          "type": "string"
        },
        "privateEndpointConnections": {
          "description": "PrivateEndpointConnections: List of private endpoint connection associated with the specified storage account",
          "items": {
            "description": "The Private Endpoint Connection resource.",
            "properties": {
              "id": {
                "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "ProvisioningState: Gets the status of the storage account at the time the operation was called.",
          "type": "string"
        },
        "routingPreference": {
          "description": "RoutingPreference: Maintains information about the network routing choice opted by the user for data transfer",
          "properties": {
            "publishInternetEndpoints": {
              "description": "PublishInternetEndpoints: A boolean flag which indicates whether internet routing storage endpoints are to be published",
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "description": "PublishMicrosoftEndpoints: A boolean flag which indicates whether microsoft routing storage endpoints are to be published",
              "type": "boolean"
            },
            "routingChoice": {
              "description": "RoutingChoice: Routing Choice defines the kind of network routing opted by the user.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "SasPolicy: SasPolicy assigned to the storage account.",
          "properties": {
            "expirationAction": {
              "description": "ExpirationAction: The SAS expiration action. Can only be Log.",
              "type": "string"
            },
            "sasExpirationPeriod": {
              "description": "SasExpirationPeriod: The SAS expiration period, DD.HH:MM:SS.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryEndpoints": {
          "description": "SecondaryEndpoints: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the\nsecondary location of the storage account. Only available if the SKU name is Standard_RAGRS.",
          "properties": {
            "blob": {
              "description": "Blob: Gets the blob endpoint.",
              "type": "string"
            },
            "dfs": {
              "description": "Dfs: Gets the dfs endpoint.",
              "type": "string"
            },
            "file": {
              "description": "File: Gets the file endpoint.",
              "type": "string"
            },
            "internetEndpoints": {
              "description": "InternetEndpoints: Gets the internet routing storage endpoints",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "MicrosoftEndpoints: Gets the microsoft routing storage endpoints.",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "queue": {
                  "description": "Queue: Gets the queue endpoint.",
                  "type": "string"
                },
                "table": {
                  "description": "Table: Gets the table endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "description": "Queue: Gets the queue endpoint.",
              "type": "string"
            },
            "table": {
              "description": "Table: Gets the table endpoint.",
              "type": "string"
            },
            "web": {
              "description": "Web: Gets the web endpoint.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryLocation": {
          "description": "SecondaryLocation: Gets the location of the geo-replicated secondary for the storage account. Only available if the\naccountType is Standard_GRS or Standard_RAGRS.",
          "type": "string"
        },
        "sku": {
          "description": "Sku: Gets the SKU.",
          "properties": {
            "name": {
              "description": "Name: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called\n accountType.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: The SKU tier. This is based on the SKU name.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "statusOfPrimary": {
          "description": "StatusOfPrimary: Gets the status indicating whether the primary location of the storage account is available or\nunavailable.",
          "type": "string"
        },
        "statusOfSecondary": {
          "description": "StatusOfSecondary: Gets the status indicating whether the secondary location of the storage account is available or\nunavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.",
          "type": "string"
        },
        "supportsHttpsTrafficOnly": {
          "description": "SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true.",
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Storage version of v1api20210401.StorageAccount\nGenerator information:\n- Generated from: /storage/resource-manager/Microsoft.Storage/stable/2021-04-01/storage.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Storage version of v1api20210401.StorageAccount_Spec",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "accessTier": {
          "type": "string"
        },
        "allowBlobPublicAccess": {
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "type": "boolean"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "Storage version of v1api20210401.AzureFilesIdentityBasedAuthentication\nSettings for Azure Files identity based authentication.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "activeDirectoryProperties": {
              "description": "Storage version of v1api20210401.ActiveDirectoryProperties\nSettings properties for Active Directory (AD).",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "azureStorageSid": {
                  "type": "string"
                },
                "domainGuid": {
                  "type": "string"
                },
                "domainName": {
                  "type": "string"
                },
                "domainSid": {
                  "type": "string"
                },
                "forestName": {
                  "type": "string"
                },
                "netBiosDomainName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "defaultSharePermission": {
              "type": "string"
            },
            "directoryServiceOptions": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "customDomain": {
          "description": "Storage version of v1api20210401.CustomDomain\nThe custom domain assigned to this storage account. This can be set via Update.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "useSubDomainName": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "encryption": {
          "description": "Storage version of v1api20210401.Encryption\nThe encryption settings on the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "identity": {
              "description": "Storage version of v1api20210401.EncryptionIdentity\nEncryption identity for the storage account.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "userAssignedIdentityReference": {
                  "description": "UserAssignedIdentityReference: Resource identifier of the UserAssigned identity to be associated with server-side\nencryption on the storage account.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "keySource": {
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Storage version of v1api20210401.KeyVaultProperties\nProperties of key vault.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "keyname": {
                  "type": "string"
                },
                "keyvaulturi": {
                  "type": "string"
                },
                "keyversion": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "type": "boolean"
            },
            "services": {
              "description": "Storage version of v1api20210401.EncryptionServices\nA list of services that support encryption.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "description": "Storage version of v1api20210401.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "Storage version of v1api20210401.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Storage version of v1api20210401.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Storage version of v1api20210401.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "Storage version of v1api20210401.ExtendedLocation\nThe complex type of the extended location.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity": {
          "description": "Storage version of v1api20210401.Identity\nIdentity for the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "type": {
              "type": "string"
            },
            "userAssignedIdentities": {
              "items": {
                "description": "Storage version of v1api20210401.UserAssignedIdentityDetails\nInformation about the user assigned identity for the resource",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "type": "boolean"
        },
        "keyPolicy": {
          "description": "Storage version of v1api20210401.KeyPolicy\nKeyPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "keyExpirationPeriodInDays": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        },
        "largeFileSharesState": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "minimumTlsVersion": {
          "type": "string"
        },
        "networkAcls": {
          "description": "Storage version of v1api20210401.NetworkRuleSet\nNetwork rule set",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "bypass": {
              "type": "string"
            },
            "defaultAction": {
              "type": "string"
            },
            "ipRules": {
              "items": {
                "description": "Storage version of v1api20210401.IPRule\nIP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "valueFromConfig": {
                    "description": "ConfigMapReference is a reference to a Kubernetes configmap and key in the same namespace as\nthe resource it is on.",
                    "properties": {
                      "key": {
                        "description": "Key is the key in the Kubernetes configmap being referenced",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the name of the Kubernetes configmap being referenced.\nThe configmap must be in the same namespace as the resource",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "items": {
                "description": "Storage version of v1api20210401.ResourceAccessRule\nResource Access Rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "resourceReference": {
                    "description": "ResourceReference: Resource Id",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "tenantId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "items": {
                "description": "Storage version of v1api20210401.VirtualNetworkRule\nVirtual Network rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "reference": {
                    "description": "Reference: Resource ID of a subnet, for example:\n/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "required": [
                  "reference"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "operatorSpec": {
          "description": "Storage version of v1api20210401.StorageAccountOperatorSpec\nDetails for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "configMapExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "configMaps": {
              "description": "Storage version of v1api20210401.StorageAccountOperatorConfigMaps",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blobEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "secretExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secrets": {
              "description": "Storage version of v1api20210401.StorageAccountOperatorSecrets",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blobEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key1": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key2": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "originalVersion": {
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "routingPreference": {
          "description": "Storage version of v1api20210401.RoutingPreference\nRouting preference defines the type of network, either microsoft or internet routing to be used to deliver the user\ndata, the default option is microsoft routing",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "publishInternetEndpoints": {
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "type": "boolean"
            },
            "routingChoice": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "Storage version of v1api20210401.SasPolicy\nSasPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "expirationAction": {
              "type": "string"
            },
            "sasExpirationPeriod": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sku": {
          "description": "Storage version of v1api20210401.Sku\nThe SKU of the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "description": "Storage version of v1api20210401.StorageAccount_STATUS\nThe storage account.",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "accessTier": {
          "type": "string"
        },
        "allowBlobPublicAccess": {
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "type": "boolean"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "Storage version of v1api20210401.AzureFilesIdentityBasedAuthentication_STATUS\nSettings for Azure Files identity based authentication.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "activeDirectoryProperties": {
              "description": "Storage version of v1api20210401.ActiveDirectoryProperties_STATUS\nSettings properties for Active Directory (AD).",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "azureStorageSid": {
                  "type": "string"
                },
                "domainGuid": {
                  "type": "string"
                },
                "domainName": {
                  "type": "string"
                },
                "domainSid": {
                  "type": "string"
                },
                "forestName": {
                  "type": "string"
                },
                "netBiosDomainName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "defaultSharePermission": {
              "type": "string"
            },
            "directoryServiceOptions": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "blobRestoreStatus": {
          "description": "Storage version of v1api20210401.BlobRestoreStatus_STATUS\nBlob restore status.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "failureReason": {
              "type": "string"
            },
            "parameters": {
              "description": "Storage version of v1api20210401.BlobRestoreParameters_STATUS\nBlob restore parameters",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blobRanges": {
                  "items": {
                    "description": "Storage version of v1api20210401.BlobRestoreRange_STATUS\nBlob range",
                    "properties": {
                      "$propertyBag": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                        "type": "object"
                      },
                      "endRange": {
                        "type": "string"
                      },
                      "startRange": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "timeToRestore": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "restoreId": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "conditions": {
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "creationTime": {
          "type": "string"
        },
        "customDomain": {
          "description": "Storage version of v1api20210401.CustomDomain_STATUS\nThe custom domain assigned to this storage account. This can be set via Update.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "useSubDomainName": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "encryption": {
          "description": "Storage version of v1api20210401.Encryption_STATUS\nThe encryption settings on the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "identity": {
              "description": "Storage version of v1api20210401.EncryptionIdentity_STATUS\nEncryption identity for the storage account.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "userAssignedIdentity": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "keySource": {
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Storage version of v1api20210401.KeyVaultProperties_STATUS\nProperties of key vault.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "currentVersionedKeyIdentifier": {
                  "type": "string"
                },
                "keyname": {
                  "type": "string"
                },
                "keyvaulturi": {
                  "type": "string"
                },
                "keyversion": {
                  "type": "string"
                },
                "lastKeyRotationTimestamp": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "type": "boolean"
            },
            "services": {
              "description": "Storage version of v1api20210401.EncryptionServices_STATUS\nA list of services that support encryption.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "description": "Storage version of v1api20210401.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "Storage version of v1api20210401.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Storage version of v1api20210401.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Storage version of v1api20210401.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "Storage version of v1api20210401.ExtendedLocation_STATUS\nThe complex type of the extended location.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "failoverInProgress": {
          "type": "boolean"
        },
        "geoReplicationStats": {
          "description": "Storage version of v1api20210401.GeoReplicationStats_STATUS\nStatistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when\ngeo-redundant replication is enabled for the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "canFailover": {
              "type": "boolean"
            },
            "lastSyncTime": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "identity": {
          "description": "Storage version of v1api20210401.Identity_STATUS\nIdentity for the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "principalId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "description": "Storage version of v1api20210401.UserAssignedIdentity_STATUS\nUserAssignedIdentity for the resource.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "principalId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "type": "boolean"
        },
        "keyCreationTime": {
          "description": "Storage version of v1api20210401.KeyCreationTime_STATUS\nStorage account keys creation time.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "key1": {
              "type": "string"
            },
            "key2": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "keyPolicy": {
          "description": "Storage version of v1api20210401.KeyPolicy_STATUS\nKeyPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "keyExpirationPeriodInDays": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        },
        "largeFileSharesState": {
          "type": "string"
        },
        "lastGeoFailoverTime": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "minimumTlsVersion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkAcls": {
          "description": "Storage version of v1api20210401.NetworkRuleSet_STATUS\nNetwork rule set",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "bypass": {
              "type": "string"
            },
            "defaultAction": {
              "type": "string"
            },
            "ipRules": {
              "items": {
                "description": "Storage version of v1api20210401.IPRule_STATUS\nIP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "items": {
                "description": "Storage version of v1api20210401.ResourceAccessRule_STATUS\nResource Access Rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "resourceId": {
                    "type": "string"
                  },
                  "tenantId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "items": {
                "description": "Storage version of v1api20210401.VirtualNetworkRule_STATUS\nVirtual Network rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "primaryEndpoints": {
          "description": "Storage version of v1api20210401.Endpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "blob": {
              "type": "string"
            },
            "dfs": {
              "type": "string"
            },
            "file": {
              "type": "string"
            },
            "internetEndpoints": {
              "description": "Storage version of v1api20210401.StorageAccountInternetEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "Storage version of v1api20210401.StorageAccountMicrosoftEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing\nendpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "queue": {
                  "type": "string"
                },
                "table": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "type": "string"
            },
            "table": {
              "type": "string"
            },
            "web": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "primaryLocation": {
          "type": "string"
        },
        "privateEndpointConnections": {
          "items": {
            "description": "Storage version of v1api20210401.PrivateEndpointConnection_STATUS\nThe Private Endpoint Connection resource.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "id": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "provisioningState": {
          "type": "string"
        },
        "routingPreference": {
          "description": "Storage version of v1api20210401.RoutingPreference_STATUS\nRouting preference defines the type of network, either microsoft or internet routing to be used to deliver the user\ndata, the default option is microsoft routing",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "publishInternetEndpoints": {
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "type": "boolean"
            },
            "routingChoice": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "Storage version of v1api20210401.SasPolicy_STATUS\nSasPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "expirationAction": {
              "type": "string"
            },
            "sasExpirationPeriod": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryEndpoints": {
          "description": "Storage version of v1api20210401.Endpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "blob": {
              "type": "string"
            },
            "dfs": {
              "type": "string"
            },
            "file": {
              "type": "string"
            },
            "internetEndpoints": {
              "description": "Storage version of v1api20210401.StorageAccountInternetEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "Storage version of v1api20210401.StorageAccountMicrosoftEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing\nendpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "queue": {
                  "type": "string"
                },
                "table": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "type": "string"
            },
            "table": {
              "type": "string"
            },
            "web": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryLocation": {
          "type": "string"
        },
        "sku": {
          "description": "Storage version of v1api20210401.Sku_STATUS\nThe SKU of the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "statusOfPrimary": {
          "type": "string"
        },
        "statusOfSecondary": {
          "type": "string"
        },
        "supportsHttpsTrafficOnly": {
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Generator information:\n- Generated from: /storage/resource-manager/Microsoft.Storage/stable/2022-09-01/storage.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "accessTier": {
          "description": "AccessTier: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium'\naccess tier is the default value for premium block blobs storage account type and it cannot be changed for the premium\nblock blobs storage account type.",
          "enum": [
            "Cool",
            "Hot",
            "Premium"
          ],
          "type": "string"
        },
        "allowBlobPublicAccess": {
          "description": "AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default\ninterpretation is true for this property.",
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "description": "AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. The default interpretation is true\nfor this property.",
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "description": "AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access\nkey via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure\nActive Directory (Azure AD). The default value is null, which is equivalent to true.",
          "type": "boolean"
        },
        "allowedCopyScope": {
          "description": "AllowedCopyScope: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.",
          "enum": [
            "AAD",
            "PrivateLink"
          ],
          "type": "string"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "AzureFilesIdentityBasedAuthentication: Provides the identity based authentication settings for Azure Files.",
          "properties": {
            "activeDirectoryProperties": {
              "description": "ActiveDirectoryProperties: Required if directoryServiceOptions are AD, optional if they are AADKERB.",
              "properties": {
                "accountType": {
                  "description": "AccountType: Specifies the Active Directory account type for Azure Storage.",
                  "enum": [
                    "Computer",
                    "User"
                  ],
                  "type": "string"
                },
                "azureStorageSid": {
                  "description": "AzureStorageSid: Specifies the security identifier (SID) for Azure Storage.",
                  "type": "string"
                },
                "domainGuid": {
                  "description": "DomainGuid: Specifies the domain GUID.",
                  "type": "string"
                },
                "domainName": {
                  "description": "DomainName: Specifies the primary domain that the AD DNS server is authoritative for.",
                  "type": "string"
                },
                "domainSid": {
                  "description": "DomainSid: Specifies the security identifier (SID).",
                  "type": "string"
                },
                "forestName": {
                  "description": "ForestName: Specifies the Active Directory forest to get.",
                  "type": "string"
                },
                "netBiosDomainName": {
                  "description": "NetBiosDomainName: Specifies the NetBIOS domain name.",
                  "type": "string"
                },
                "samAccountName": {
                  "description": "SamAccountName: Specifies the Active Directory SAMAccountName for Azure Storage.",
                  "type": "string"
                }
              },
              "required": [
                "domainGuid",
                "domainName"
              ],
              "type": "object"
            },
            "defaultSharePermission": {
              "description": "DefaultSharePermission: Default share permission for users using Kerberos authentication if RBAC role is not assigned.",
              "enum": [
                "None",
                "StorageFileDataSmbShareContributor",
                "StorageFileDataSmbShareElevatedContributor",
                "StorageFileDataSmbShareReader"
              ],
              "type": "string"
            },
            "directoryServiceOptions": {
              "description": "DirectoryServiceOptions: Indicates the directory service used. Note that this enum may be extended in the future.",
              "enum": [
                "AADDS",
                "AADKERB",
                "AD",
                "None"
              ],
              "type": "string"
            }
          },
          "required": [
            "directoryServiceOptions"
          ],
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "customDomain": {
          "description": "CustomDomain: User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported\nper storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name\nproperty.",
          "properties": {
            "name": {
              "description": "Name: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
              "type": "string"
            },
            "useSubDomainName": {
              "description": "UseSubDomainName: Indicates whether indirect CName validation is enabled. Default value is false. This should only be\nset on updates.",
              "type": "boolean"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "defaultToOAuthAuthentication": {
          "description": "DefaultToOAuthAuthentication: A boolean flag which indicates whether the default authentication is OAuth or not. The\ndefault interpretation is false for this property.",
          "type": "boolean"
        },
        "dnsEndpointType": {
          "description": "DnsEndpointType: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of\naccounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an\nalphanumeric DNS Zone identifier.",
          "enum": [
            "AzureDnsZone",
            "Standard"
          ],
          "type": "string"
        },
        "encryption": {
          "description": "Encryption: Encryption settings to be used for server-side encryption for the storage account.",
          "properties": {
            "identity": {
              "description": "Identity: The identity to be used with service-side encryption at rest.",
              "properties": {
                "federatedIdentityClientId": {
                  "description": "FederatedIdentityClientId: ClientId of the multi-tenant application to be used in conjunction with the user-assigned\nidentity for cross-tenant customer-managed-keys server-side encryption on the storage account.",
                  "type": "string"
                },
                "userAssignedIdentityReference": {
                  "description": "UserAssignedIdentityReference: Resource identifier of the UserAssigned identity to be associated with server-side\nencryption on the storage account.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "keySource": {
              "description": "KeySource: The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage,\nMicrosoft.Keyvault",
              "enum": [
                "Microsoft.Keyvault",
                "Microsoft.Storage"
              ],
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Keyvaultproperties: Properties provided by key vault.",
              "properties": {
                "keyname": {
                  "description": "Keyname: The name of KeyVault key.",
                  "type": "string"
                },
                "keyvaulturi": {
                  "description": "Keyvaulturi: The Uri of KeyVault.",
                  "type": "string"
                },
                "keyversion": {
                  "description": "Keyversion: The version of KeyVault key.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "description": "RequireInfrastructureEncryption: A boolean indicating whether or not the service applies a secondary layer of encryption\nwith platform managed keys for data at rest.",
              "type": "boolean"
            },
            "services": {
              "description": "Services: List of services which support encryption.",
              "properties": {
                "blob": {
                  "description": "Blob: The encryption function of the blob storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "File: The encryption function of the file storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Queue: The encryption function of the queue storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Table: The encryption function of the table storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: Optional. Set the extended location of the resource. If not set, the storage account will be created\nin Azure main region. Otherwise it will be created in the specified extended location",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity": {
          "description": "Identity: The identity of the resource.",
          "properties": {
            "type": {
              "description": "Type: The identity type.",
              "enum": [
                "None",
                "SystemAssigned",
                "SystemAssigned,UserAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "UserAssignedIdentities: Gets or sets a list of key value pairs that describe the set of User Assigned identities that\nwill be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned\nidentity is permitted here.",
              "items": {
                "description": "Information about the user assigned identity for the resource",
                "properties": {
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        "immutableStorageWithVersioning": {
          "description": "ImmutableStorageWithVersioning: The property is immutable and can only be set to true at the account creation time. When\nset to true, it enables object level immutability for all the new containers in the account by default.",
          "properties": {
            "enabled": {
              "description": "Enabled: A boolean flag which enables account-level immutability. All the containers under such an account have\nobject-level immutability enabled by default.",
              "type": "boolean"
            },
            "immutabilityPolicy": {
              "description": "ImmutabilityPolicy: Specifies the default account-level immutability policy which is inherited and applied to objects\nthat do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher\nprecedence than the container-level immutability policy, which has a higher precedence than the account-level\nimmutability policy.",
              "properties": {
                "allowProtectedAppendWrites": {
                  "description": "AllowProtectedAppendWrites: This property can only be changed for disabled and unlocked time-based retention policies.\nWhen enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only\nnew blocks can be added and any existing blocks cannot be modified or deleted.",
                  "type": "boolean"
                },
                "immutabilityPeriodSinceCreationInDays": {
                  "description": "ImmutabilityPeriodSinceCreationInDays: The immutability period for the blobs in the container since the policy creation,\nin days.",
                  "maximum": 146000,
                  "minimum": 1,
                  "type": "integer"
                },
                "state": {
                  "description": "State: The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state\nallows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites\nproperty, Locked state only allows the increase of the immutability retention time. A policy can only be created in a\nDisabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition\nto a Locked state which cannot be reverted.",
                  "enum": [
                    "Disabled",
                    "Locked",
                    "Unlocked"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "description": "IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.",
          "type": "boolean"
        },
        "isLocalUserEnabled": {
          "description": "IsLocalUserEnabled: Enables local users feature, if set to true",
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "description": "IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.",
          "type": "boolean"
        },
        "isSftpEnabled": {
          "description": "IsSftpEnabled: Enables Secure File Transfer Protocol, if set to true",
          "type": "boolean"
        },
        "keyPolicy": {
          "description": "KeyPolicy: KeyPolicy assigned to the storage account.",
          "properties": {
            "keyExpirationPeriodInDays": {
              "description": "KeyExpirationPeriodInDays: The key expiration period in days.",
              "type": "integer"
            }
          },
          "required": [
            "keyExpirationPeriodInDays"
          ],
          "type": "object"
        },
        "kind": {
          "description": "Kind: Required. Indicates the type of storage account.",
          "enum": [
            "BlobStorage",
            "BlockBlobStorage",
            "FileStorage",
            "Storage",
            "StorageV2"
          ],
          "type": "string"
        },
        "largeFileSharesState": {
          "description": "LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location: Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure\nGeo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is\ncreated, but if an identical geo region is specified on update, the request will succeed.",
          "type": "string"
        },
        "minimumTlsVersion": {
          "description": "MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS\n1.0 for this property.",
          "enum": [
            "TLS1_0",
            "TLS1_1",
            "TLS1_2"
          ],
          "type": "string"
        },
        "networkAcls": {
          "description": "NetworkAcls: Network rule set",
          "properties": {
            "bypass": {
              "description": "Bypass: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of\nLogging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
              "type": "string"
            },
            "defaultAction": {
              "description": "DefaultAction: Specifies the default action of allow or deny when no other rules match.",
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            "ipRules": {
              "description": "IpRules: Sets the IP ACL rules",
              "items": {
                "description": "IP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "action": {
                    "description": "Action: The action of IP ACL rule.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
                    "type": "string"
                  },
                  "valueFromConfig": {
                    "description": "ValueFromConfig: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
                    "properties": {
                      "key": {
                        "description": "Key is the key in the Kubernetes configmap being referenced",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the name of the Kubernetes configmap being referenced.\nThe configmap must be in the same namespace as the resource",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "description": "ResourceAccessRules: Sets the resource access rules",
              "items": {
                "description": "Resource Access Rule.",
                "properties": {
                  "resourceReference": {
                    "description": "ResourceReference: Resource Id",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "tenantId": {
                    "description": "TenantId: Tenant Id",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "description": "VirtualNetworkRules: Sets the virtual network rules",
              "items": {
                "description": "Virtual Network rule.",
                "properties": {
                  "action": {
                    "description": "Action: The action of virtual network rule.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string"
                  },
                  "reference": {
                    "description": "Reference: Resource ID of a subnet, for example:\n/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "description": "State: Gets the state of virtual network rule.",
                    "enum": [
                      "Deprovisioning",
                      "Failed",
                      "NetworkSourceDeleted",
                      "Provisioning",
                      "Succeeded"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "reference"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "defaultAction"
          ],
          "type": "object"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "configMaps": {
              "description": "ConfigMaps: configures where to place operator written ConfigMaps.",
              "properties": {
                "blobEndpoint": {
                  "description": "BlobEndpoint: indicates where the BlobEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "DfsEndpoint: indicates where the DfsEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "FileEndpoint: indicates where the FileEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "QueueEndpoint: indicates where the QueueEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "TableEndpoint: indicates where the TableEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "WebEndpoint: indicates where the WebEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secrets": {
              "description": "Secrets: configures where to place Azure generated secrets.",
              "properties": {
                "blobEndpoint": {
                  "description": "BlobEndpoint: indicates where the BlobEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "DfsEndpoint: indicates where the DfsEndpoint secret should be placed. If omitted, the secret will not be retrieved from\nAzure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "FileEndpoint: indicates where the FileEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key1": {
                  "description": "Key1: indicates where the Key1 secret should be placed. If omitted, the secret will not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key2": {
                  "description": "Key2: indicates where the Key2 secret should be placed. If omitted, the secret will not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "QueueEndpoint: indicates where the QueueEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "TableEndpoint: indicates where the TableEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "WebEndpoint: indicates where the WebEndpoint secret should be placed. If omitted, the secret will not be retrieved from\nAzure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: Allow or disallow public network access to Storage Account. Value is optional but if passed in,\nmust be 'Enabled' or 'Disabled'.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "routingPreference": {
          "description": "RoutingPreference: Maintains information about the network routing choice opted by the user for data transfer",
          "properties": {
            "publishInternetEndpoints": {
              "description": "PublishInternetEndpoints: A boolean flag which indicates whether internet routing storage endpoints are to be published",
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "description": "PublishMicrosoftEndpoints: A boolean flag which indicates whether microsoft routing storage endpoints are to be published",
              "type": "boolean"
            },
            "routingChoice": {
              "description": "RoutingChoice: Routing Choice defines the kind of network routing opted by the user.",
              "enum": [
                "InternetRouting",
                "MicrosoftRouting"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "SasPolicy: SasPolicy assigned to the storage account.",
          "properties": {
            "expirationAction": {
              "description": "ExpirationAction: The SAS expiration action. Can only be Log.",
              "enum": [
                "Log"
              ],
              "type": "string"
            },
            "sasExpirationPeriod": {
              "description": "SasExpirationPeriod: The SAS expiration period, DD.HH:MM:SS.",
              "type": "string"
            }
          },
          "required": [
            "expirationAction",
            "sasExpirationPeriod"
          ],
          "type": "object"
        },
        "sku": {
          "description": "Sku: Required. Gets or sets the SKU name.",
          "properties": {
            "name": {
              "description": "Name: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called\n accountType.",
              "enum": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
              ],
              "type": "string"
            },
            "tier": {
              "description": "Tier: The SKU tier. This is based on the SKU name.",
              "enum": [
                "Premium",
                "Standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "description": "SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true. The default value is true since\nAPI version 2019-04-01.",
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping\nthis resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key\nwith a length no greater than 128 characters and a value with a length no greater than 256 characters.",
          "type": "object"
        }
      },
      "required": [
        "kind",
        "location",
        "owner",
        "sku"
      ],
      "type": "object"
    },
    "status": {
      "description": "The storage account.",
      "properties": {
        "accessTier": {
          "description": "AccessTier: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium'\naccess tier is the default value for premium block blobs storage account type and it cannot be changed for the premium\nblock blobs storage account type.",
          "type": "string"
        },
        "allowBlobPublicAccess": {
          "description": "AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default\ninterpretation is true for this property.",
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "description": "AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. The default interpretation is true\nfor this property.",
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "description": "AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access\nkey via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure\nActive Directory (Azure AD). The default value is null, which is equivalent to true.",
          "type": "boolean"
        },
        "allowedCopyScope": {
          "description": "AllowedCopyScope: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.",
          "type": "string"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "AzureFilesIdentityBasedAuthentication: Provides the identity based authentication settings for Azure Files.",
          "properties": {
            "activeDirectoryProperties": {
              "description": "ActiveDirectoryProperties: Required if directoryServiceOptions are AD, optional if they are AADKERB.",
              "properties": {
                "accountType": {
                  "description": "AccountType: Specifies the Active Directory account type for Azure Storage.",
                  "type": "string"
                },
                "azureStorageSid": {
                  "description": "AzureStorageSid: Specifies the security identifier (SID) for Azure Storage.",
                  "type": "string"
                },
                "domainGuid": {
                  "description": "DomainGuid: Specifies the domain GUID.",
                  "type": "string"
                },
                "domainName": {
                  "description": "DomainName: Specifies the primary domain that the AD DNS server is authoritative for.",
                  "type": "string"
                },
                "domainSid": {
                  "description": "DomainSid: Specifies the security identifier (SID).",
                  "type": "string"
                },
                "forestName": {
                  "description": "ForestName: Specifies the Active Directory forest to get.",
                  "type": "string"
                },
                "netBiosDomainName": {
                  "description": "NetBiosDomainName: Specifies the NetBIOS domain name.",
                  "type": "string"
                },
                "samAccountName": {
                  "description": "SamAccountName: Specifies the Active Directory SAMAccountName for Azure Storage.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "defaultSharePermission": {
              "description": "DefaultSharePermission: Default share permission for users using Kerberos authentication if RBAC role is not assigned.",
              "type": "string"
            },
            "directoryServiceOptions": {
              "description": "DirectoryServiceOptions: Indicates the directory service used. Note that this enum may be extended in the future.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "blobRestoreStatus": {
          "description": "BlobRestoreStatus: Blob restore status",
          "properties": {
            "failureReason": {
              "description": "FailureReason: Failure reason when blob restore is failed.",
              "type": "string"
            },
            "parameters": {
              "description": "Parameters: Blob restore request parameters.",
              "properties": {
                "blobRanges": {
                  "description": "BlobRanges: Blob ranges to restore.",
                  "items": {
                    "description": "Blob range",
                    "properties": {
                      "endRange": {
                        "description": "EndRange: Blob end range. This is exclusive. Empty means account end.",
                        "type": "string"
                      },
                      "startRange": {
                        "description": "StartRange: Blob start range. This is inclusive. Empty means account start.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "timeToRestore": {
                  "description": "TimeToRestore: Restore blob to the specified time.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "restoreId": {
              "description": "RestoreId: Id for tracking blob restore request.",
              "type": "string"
            },
            "status": {
              "description": "Status: The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing.\n- Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "creationTime": {
          "description": "CreationTime: Gets the creation date and time of the storage account in UTC.",
          "type": "string"
        },
        "customDomain": {
          "description": "CustomDomain: Gets the custom domain the user assigned to this storage account.",
          "properties": {
            "name": {
              "description": "Name: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
              "type": "string"
            },
            "useSubDomainName": {
              "description": "UseSubDomainName: Indicates whether indirect CName validation is enabled. Default value is false. This should only be\nset on updates.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "defaultToOAuthAuthentication": {
          "description": "DefaultToOAuthAuthentication: A boolean flag which indicates whether the default authentication is OAuth or not. The\ndefault interpretation is false for this property.",
          "type": "boolean"
        },
        "dnsEndpointType": {
          "description": "DnsEndpointType: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of\naccounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an\nalphanumeric DNS Zone identifier.",
          "type": "string"
        },
        "encryption": {
          "description": "Encryption: Encryption settings to be used for server-side encryption for the storage account.",
          "properties": {
            "identity": {
              "description": "Identity: The identity to be used with service-side encryption at rest.",
              "properties": {
                "federatedIdentityClientId": {
                  "description": "FederatedIdentityClientId: ClientId of the multi-tenant application to be used in conjunction with the user-assigned\nidentity for cross-tenant customer-managed-keys server-side encryption on the storage account.",
                  "type": "string"
                },
                "userAssignedIdentity": {
                  "description": "UserAssignedIdentity: Resource identifier of the UserAssigned identity to be associated with server-side encryption on\nthe storage account.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "keySource": {
              "description": "KeySource: The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage,\nMicrosoft.Keyvault",
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Keyvaultproperties: Properties provided by key vault.",
              "properties": {
                "currentVersionedKeyExpirationTimestamp": {
                  "description": "CurrentVersionedKeyExpirationTimestamp: This is a read only property that represents the expiration time of the current\nversion of the customer managed key used for encryption.",
                  "type": "string"
                },
                "currentVersionedKeyIdentifier": {
                  "description": "CurrentVersionedKeyIdentifier: The object identifier of the current versioned Key Vault Key in use.",
                  "type": "string"
                },
                "keyname": {
                  "description": "Keyname: The name of KeyVault key.",
                  "type": "string"
                },
                "keyvaulturi": {
                  "description": "Keyvaulturi: The Uri of KeyVault.",
                  "type": "string"
                },
                "keyversion": {
                  "description": "Keyversion: The version of KeyVault key.",
                  "type": "string"
                },
                "lastKeyRotationTimestamp": {
                  "description": "LastKeyRotationTimestamp: Timestamp of last rotation of the Key Vault Key.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "description": "RequireInfrastructureEncryption: A boolean indicating whether or not the service applies a secondary layer of encryption\nwith platform managed keys for data at rest.",
              "type": "boolean"
            },
            "services": {
              "description": "Services: List of services which support encryption.",
              "properties": {
                "blob": {
                  "description": "Blob: The encryption function of the blob storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is\nencrypted at rest by default today and cannot be disabled.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "File: The encryption function of the file storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is\nencrypted at rest by default today and cannot be disabled.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Queue: The encryption function of the queue storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is\nencrypted at rest by default today and cannot be disabled.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Table: The encryption function of the table storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is\nencrypted at rest by default today and cannot be disabled.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extendedLocation of the resource.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "failoverInProgress": {
          "description": "FailoverInProgress: If the failover is in progress, the value will be true, otherwise, it will be null.",
          "type": "boolean"
        },
        "geoReplicationStats": {
          "description": "GeoReplicationStats: Geo Replication Stats",
          "properties": {
            "canFailover": {
              "description": "CanFailover: A boolean flag which indicates whether or not account failover is supported for the account.",
              "type": "boolean"
            },
            "lastSyncTime": {
              "description": "LastSyncTime: All primary writes preceding this UTC date/time value are guaranteed to be available for read operations.\nPrimary writes following this point in time may or may not be available for reads. Element may be default value if value\nof LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.",
              "type": "string"
            },
            "status": {
              "description": "Status: The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is\nactive and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary\nlocation is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the\nsecondary location is temporarily unavailable.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "identity": {
          "description": "Identity: The identity of the resource.",
          "properties": {
            "principalId": {
              "description": "PrincipalId: The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "TenantId: The tenant ID of resource.",
              "type": "string"
            },
            "type": {
              "description": "Type: The identity type.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "description": "UserAssignedIdentity for the resource.",
                "properties": {
                  "clientId": {
                    "description": "ClientId: The client ID of the identity.",
                    "type": "string"
                  },
                  "principalId": {
                    "description": "PrincipalId: The principal ID of the identity.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": "UserAssignedIdentities: Gets or sets a list of key value pairs that describe the set of User Assigned identities that\nwill be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned\nidentity is permitted here.",
              "type": "object"
            }
          },
          "type": "object"
        },
        "immutableStorageWithVersioning": {
          "description": "ImmutableStorageWithVersioning: The property is immutable and can only be set to true at the account creation time. When\nset to true, it enables object level immutability for all the containers in the account by default.",
          "properties": {
            "enabled": {
              "description": "Enabled: A boolean flag which enables account-level immutability. All the containers under such an account have\nobject-level immutability enabled by default.",
              "type": "boolean"
            },
            "immutabilityPolicy": {
              "description": "ImmutabilityPolicy: Specifies the default account-level immutability policy which is inherited and applied to objects\nthat do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher\nprecedence than the container-level immutability policy, which has a higher precedence than the account-level\nimmutability policy.",
              "properties": {
                "allowProtectedAppendWrites": {
                  "description": "AllowProtectedAppendWrites: This property can only be changed for disabled and unlocked time-based retention policies.\nWhen enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only\nnew blocks can be added and any existing blocks cannot be modified or deleted.",
                  "type": "boolean"
                },
                "immutabilityPeriodSinceCreationInDays": {
                  "description": "ImmutabilityPeriodSinceCreationInDays: The immutability period for the blobs in the container since the policy creation,\nin days.",
                  "type": "integer"
                },
                "state": {
                  "description": "State: The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state\nallows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites\nproperty, Locked state only allows the increase of the immutability retention time. A policy can only be created in a\nDisabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition\nto a Locked state which cannot be reverted.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "description": "IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.",
          "type": "boolean"
        },
        "isLocalUserEnabled": {
          "description": "IsLocalUserEnabled: Enables local users feature, if set to true",
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "description": "IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.",
          "type": "boolean"
        },
        "isSftpEnabled": {
          "description": "IsSftpEnabled: Enables Secure File Transfer Protocol, if set to true",
          "type": "boolean"
        },
        "keyCreationTime": {
          "description": "KeyCreationTime: Storage account keys creation time.",
          "properties": {
            "key1": {
              "type": "string"
            },
            "key2": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "keyPolicy": {
          "description": "KeyPolicy: KeyPolicy assigned to the storage account.",
          "properties": {
            "keyExpirationPeriodInDays": {
              "description": "KeyExpirationPeriodInDays: The key expiration period in days.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "kind": {
          "description": "Kind: Gets the Kind.",
          "type": "string"
        },
        "largeFileSharesState": {
          "description": "LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
          "type": "string"
        },
        "lastGeoFailoverTime": {
          "description": "LastGeoFailoverTime: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the\nmost recent timestamp is retained. This element is not returned if there has never been a failover instance. Only\navailable if the accountType is Standard_GRS or Standard_RAGRS.",
          "type": "string"
        },
        "location": {
          "description": "Location: The geo-location where the resource lives",
          "type": "string"
        },
        "minimumTlsVersion": {
          "description": "MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS\n1.0 for this property.",
          "type": "string"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "networkAcls": {
          "description": "NetworkAcls: Network rule set",
          "properties": {
            "bypass": {
              "description": "Bypass: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of\nLogging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
              "type": "string"
            },
            "defaultAction": {
              "description": "DefaultAction: Specifies the default action of allow or deny when no other rules match.",
              "type": "string"
            },
            "ipRules": {
              "description": "IpRules: Sets the IP ACL rules",
              "items": {
                "description": "IP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "action": {
                    "description": "Action: The action of IP ACL rule.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "description": "ResourceAccessRules: Sets the resource access rules",
              "items": {
                "description": "Resource Access Rule.",
                "properties": {
                  "resourceId": {
                    "description": "ResourceId: Resource Id",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "TenantId: Tenant Id",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "description": "VirtualNetworkRules: Sets the virtual network rules",
              "items": {
                "description": "Virtual Network rule.",
                "properties": {
                  "action": {
                    "description": "Action: The action of virtual network rule.",
                    "type": "string"
                  },
                  "id": {
                    "description": "Id: Resource ID of a subnet, for example:\n/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
                    "type": "string"
                  },
                  "state": {
                    "description": "State: Gets the state of virtual network rule.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "primaryEndpoints": {
          "description": "PrimaryEndpoints: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that\nStandard_ZRS and Premium_LRS accounts only return the blob endpoint.",
          "properties": {
            "blob": {
              "description": "Blob: Gets the blob endpoint.",
              "type": "string"
            },
            "dfs": {
              "description": "Dfs: Gets the dfs endpoint.",
              "type": "string"
            },
            "file": {
              "description": "File: Gets the file endpoint.",
              "type": "string"
            },
            "internetEndpoints": {
              "description": "InternetEndpoints: Gets the internet routing storage endpoints",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "MicrosoftEndpoints: Gets the microsoft routing storage endpoints.",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "queue": {
                  "description": "Queue: Gets the queue endpoint.",
                  "type": "string"
                },
                "table": {
                  "description": "Table: Gets the table endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "description": "Queue: Gets the queue endpoint.",
              "type": "string"
            },
            "table": {
              "description": "Table: Gets the table endpoint.",
              "type": "string"
            },
            "web": {
              "description": "Web: Gets the web endpoint.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "primaryLocation": {
          "description": "PrimaryLocation: Gets the location of the primary data center for the storage account.",
          "type": "string"
        },
        "privateEndpointConnections": {
          "description": "PrivateEndpointConnections: List of private endpoint connection associated with the specified storage account",
          "items": {
            "description": "The Private Endpoint Connection resource.",
            "properties": {
              "id": {
                "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "ProvisioningState: Gets the status of the storage account at the time the operation was called.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: Allow or disallow public network access to Storage Account. Value is optional but if passed in,\nmust be 'Enabled' or 'Disabled'.",
          "type": "string"
        },
        "routingPreference": {
          "description": "RoutingPreference: Maintains information about the network routing choice opted by the user for data transfer",
          "properties": {
            "publishInternetEndpoints": {
              "description": "PublishInternetEndpoints: A boolean flag which indicates whether internet routing storage endpoints are to be published",
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "description": "PublishMicrosoftEndpoints: A boolean flag which indicates whether microsoft routing storage endpoints are to be published",
              "type": "boolean"
            },
            "routingChoice": {
              "description": "RoutingChoice: Routing Choice defines the kind of network routing opted by the user.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "SasPolicy: SasPolicy assigned to the storage account.",
          "properties": {
            "expirationAction": {
              "description": "ExpirationAction: The SAS expiration action. Can only be Log.",
              "type": "string"
            },
            "sasExpirationPeriod": {
              "description": "SasExpirationPeriod: The SAS expiration period, DD.HH:MM:SS.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryEndpoints": {
          "description": "SecondaryEndpoints: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the\nsecondary location of the storage account. Only available if the SKU name is Standard_RAGRS.",
          "properties": {
            "blob": {
              "description": "Blob: Gets the blob endpoint.",
              "type": "string"
            },
            "dfs": {
              "description": "Dfs: Gets the dfs endpoint.",
              "type": "string"
            },
            "file": {
              "description": "File: Gets the file endpoint.",
              "type": "string"
            },
            "internetEndpoints": {
              "description": "InternetEndpoints: Gets the internet routing storage endpoints",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "MicrosoftEndpoints: Gets the microsoft routing storage endpoints.",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "queue": {
                  "description": "Queue: Gets the queue endpoint.",
                  "type": "string"
                },
                "table": {
                  "description": "Table: Gets the table endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "description": "Queue: Gets the queue endpoint.",
              "type": "string"
            },
            "table": {
              "description": "Table: Gets the table endpoint.",
              "type": "string"
            },
            "web": {
              "description": "Web: Gets the web endpoint.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryLocation": {
          "description": "SecondaryLocation: Gets the location of the geo-replicated secondary for the storage account. Only available if the\naccountType is Standard_GRS or Standard_RAGRS.",
          "type": "string"
        },
        "sku": {
          "description": "Sku: Gets the SKU.",
          "properties": {
            "name": {
              "description": "Name: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called\n accountType.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: The SKU tier. This is based on the SKU name.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "statusOfPrimary": {
          "description": "StatusOfPrimary: Gets the status indicating whether the primary location of the storage account is available or\nunavailable.",
          "type": "string"
        },
        "statusOfSecondary": {
          "description": "StatusOfSecondary: Gets the status indicating whether the secondary location of the storage account is available or\nunavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.",
          "type": "string"
        },
        "storageAccountSkuConversionStatus": {
          "description": "StorageAccountSkuConversionStatus: This property is readOnly and is set by server during asynchronous storage account\nsku conversion operations.",
          "properties": {
            "endTime": {
              "description": "EndTime: This property represents the sku conversion end time.",
              "type": "string"
            },
            "skuConversionStatus": {
              "description": "SkuConversionStatus: This property indicates the current sku conversion status.",
              "type": "string"
            },
            "startTime": {
              "description": "StartTime: This property represents the sku conversion start time.",
              "type": "string"
            },
            "targetSkuName": {
              "description": "TargetSkuName: This property represents the target sku name to which the account sku is being converted asynchronously.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "description": "SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true.",
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Storage version of v1api20220901.StorageAccount\nGenerator information:\n- Generated from: /storage/resource-manager/Microsoft.Storage/stable/2022-09-01/storage.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Storage version of v1api20220901.StorageAccount_Spec",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "accessTier": {
          "type": "string"
        },
        "allowBlobPublicAccess": {
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "type": "boolean"
        },
        "allowedCopyScope": {
          "type": "string"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "Storage version of v1api20220901.AzureFilesIdentityBasedAuthentication\nSettings for Azure Files identity based authentication.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "activeDirectoryProperties": {
              "description": "Storage version of v1api20220901.ActiveDirectoryProperties\nSettings properties for Active Directory (AD).",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "accountType": {
                  "type": "string"
                },
                "azureStorageSid": {
                  "type": "string"
                },
                "domainGuid": {
                  "type": "string"
                },
                "domainName": {
                  "type": "string"
                },
                "domainSid": {
                  "type": "string"
                },
                "forestName": {
                  "type": "string"
                },
                "netBiosDomainName": {
                  "type": "string"
                },
                "samAccountName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "defaultSharePermission": {
              "type": "string"
            },
            "directoryServiceOptions": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "customDomain": {
          "description": "Storage version of v1api20220901.CustomDomain\nThe custom domain assigned to this storage account. This can be set via Update.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "useSubDomainName": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "defaultToOAuthAuthentication": {
          "type": "boolean"
        },
        "dnsEndpointType": {
          "type": "string"
        },
        "encryption": {
          "description": "Storage version of v1api20220901.Encryption\nThe encryption settings on the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "identity": {
              "description": "Storage version of v1api20220901.EncryptionIdentity\nEncryption identity for the storage account.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "federatedIdentityClientId": {
                  "type": "string"
                },
                "userAssignedIdentityReference": {
                  "description": "UserAssignedIdentityReference: Resource identifier of the UserAssigned identity to be associated with server-side\nencryption on the storage account.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "keySource": {
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Storage version of v1api20220901.KeyVaultProperties\nProperties of key vault.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "keyname": {
                  "type": "string"
                },
                "keyvaulturi": {
                  "type": "string"
                },
                "keyversion": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "type": "boolean"
            },
            "services": {
              "description": "Storage version of v1api20220901.EncryptionServices\nA list of services that support encryption.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "description": "Storage version of v1api20220901.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "Storage version of v1api20220901.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Storage version of v1api20220901.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Storage version of v1api20220901.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "Storage version of v1api20220901.ExtendedLocation\nThe complex type of the extended location.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity": {
          "description": "Storage version of v1api20220901.Identity\nIdentity for the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "type": {
              "type": "string"
            },
            "userAssignedIdentities": {
              "items": {
                "description": "Storage version of v1api20220901.UserAssignedIdentityDetails\nInformation about the user assigned identity for the resource",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "immutableStorageWithVersioning": {
          "description": "Storage version of v1api20220901.ImmutableStorageAccount\nThis property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "enabled": {
              "type": "boolean"
            },
            "immutabilityPolicy": {
              "description": "Storage version of v1api20220901.AccountImmutabilityPolicyProperties\nThis defines account-level immutability policy properties.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "allowProtectedAppendWrites": {
                  "type": "boolean"
                },
                "immutabilityPeriodSinceCreationInDays": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "type": "boolean"
        },
        "isLocalUserEnabled": {
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "type": "boolean"
        },
        "isSftpEnabled": {
          "type": "boolean"
        },
        "keyPolicy": {
          "description": "Storage version of v1api20220901.KeyPolicy\nKeyPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "keyExpirationPeriodInDays": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        },
        "largeFileSharesState": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "minimumTlsVersion": {
          "type": "string"
        },
        "networkAcls": {
          "description": "Storage version of v1api20220901.NetworkRuleSet\nNetwork rule set",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "bypass": {
              "type": "string"
            },
            "defaultAction": {
              "type": "string"
            },
            "ipRules": {
              "items": {
                "description": "Storage version of v1api20220901.IPRule\nIP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "valueFromConfig": {
                    "description": "ConfigMapReference is a reference to a Kubernetes configmap and key in the same namespace as\nthe resource it is on.",
                    "properties": {
                      "key": {
                        "description": "Key is the key in the Kubernetes configmap being referenced",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the name of the Kubernetes configmap being referenced.\nThe configmap must be in the same namespace as the resource",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "items": {
                "description": "Storage version of v1api20220901.ResourceAccessRule\nResource Access Rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "resourceReference": {
                    "description": "ResourceReference: Resource Id",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "tenantId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "items": {
                "description": "Storage version of v1api20220901.VirtualNetworkRule\nVirtual Network rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "reference": {
                    "description": "Reference: Resource ID of a subnet, for example:\n/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "required": [
                  "reference"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "operatorSpec": {
          "description": "Storage version of v1api20220901.StorageAccountOperatorSpec\nDetails for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "configMapExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "configMaps": {
              "description": "Storage version of v1api20220901.StorageAccountOperatorConfigMaps",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blobEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "secretExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secrets": {
              "description": "Storage version of v1api20220901.StorageAccountOperatorSecrets",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blobEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key1": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key2": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "originalVersion": {
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "publicNetworkAccess": {
          "type": "string"
        },
        "routingPreference": {
          "description": "Storage version of v1api20220901.RoutingPreference\nRouting preference defines the type of network, either microsoft or internet routing to be used to deliver the user\ndata, the default option is microsoft routing",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "publishInternetEndpoints": {
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "type": "boolean"
            },
            "routingChoice": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "Storage version of v1api20220901.SasPolicy\nSasPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "expirationAction": {
              "type": "string"
            },
            "sasExpirationPeriod": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sku": {
          "description": "Storage version of v1api20220901.Sku\nThe SKU of the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "description": "Storage version of v1api20220901.StorageAccount_STATUS\nThe storage account.",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "accessTier": {
          "type": "string"
        },
        "allowBlobPublicAccess": {
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "type": "boolean"
        },
        "allowedCopyScope": {
          "type": "string"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "Storage version of v1api20220901.AzureFilesIdentityBasedAuthentication_STATUS\nSettings for Azure Files identity based authentication.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "activeDirectoryProperties": {
              "description": "Storage version of v1api20220901.ActiveDirectoryProperties_STATUS\nSettings properties for Active Directory (AD).",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "accountType": {
                  "type": "string"
                },
                "azureStorageSid": {
                  "type": "string"
                },
                "domainGuid": {
                  "type": "string"
                },
                "domainName": {
                  "type": "string"
                },
                "domainSid": {
                  "type": "string"
                },
                "forestName": {
                  "type": "string"
                },
                "netBiosDomainName": {
                  "type": "string"
                },
                "samAccountName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "defaultSharePermission": {
              "type": "string"
            },
            "directoryServiceOptions": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "blobRestoreStatus": {
          "description": "Storage version of v1api20220901.BlobRestoreStatus_STATUS\nBlob restore status.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "failureReason": {
              "type": "string"
            },
            "parameters": {
              "description": "Storage version of v1api20220901.BlobRestoreParameters_STATUS\nBlob restore parameters",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blobRanges": {
                  "items": {
                    "description": "Storage version of v1api20220901.BlobRestoreRange_STATUS\nBlob range",
                    "properties": {
                      "$propertyBag": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                        "type": "object"
                      },
                      "endRange": {
                        "type": "string"
                      },
                      "startRange": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "timeToRestore": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "restoreId": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "conditions": {
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "creationTime": {
          "type": "string"
        },
        "customDomain": {
          "description": "Storage version of v1api20220901.CustomDomain_STATUS\nThe custom domain assigned to this storage account. This can be set via Update.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "useSubDomainName": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "defaultToOAuthAuthentication": {
          "type": "boolean"
        },
        "dnsEndpointType": {
          "type": "string"
        },
        "encryption": {
          "description": "Storage version of v1api20220901.Encryption_STATUS\nThe encryption settings on the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "identity": {
              "description": "Storage version of v1api20220901.EncryptionIdentity_STATUS\nEncryption identity for the storage account.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "federatedIdentityClientId": {
                  "type": "string"
                },
                "userAssignedIdentity": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "keySource": {
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Storage version of v1api20220901.KeyVaultProperties_STATUS\nProperties of key vault.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "currentVersionedKeyExpirationTimestamp": {
                  "type": "string"
                },
                "currentVersionedKeyIdentifier": {
                  "type": "string"
                },
                "keyname": {
                  "type": "string"
                },
                "keyvaulturi": {
                  "type": "string"
                },
                "keyversion": {
                  "type": "string"
                },
                "lastKeyRotationTimestamp": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "type": "boolean"
            },
            "services": {
              "description": "Storage version of v1api20220901.EncryptionServices_STATUS\nA list of services that support encryption.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "description": "Storage version of v1api20220901.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "Storage version of v1api20220901.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Storage version of v1api20220901.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Storage version of v1api20220901.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "Storage version of v1api20220901.ExtendedLocation_STATUS\nThe complex type of the extended location.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "failoverInProgress": {
          "type": "boolean"
        },
        "geoReplicationStats": {
          "description": "Storage version of v1api20220901.GeoReplicationStats_STATUS\nStatistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when\ngeo-redundant replication is enabled for the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "canFailover": {
              "type": "boolean"
            },
            "lastSyncTime": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "identity": {
          "description": "Storage version of v1api20220901.Identity_STATUS\nIdentity for the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "principalId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "description": "Storage version of v1api20220901.UserAssignedIdentity_STATUS\nUserAssignedIdentity for the resource.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "principalId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "immutableStorageWithVersioning": {
          "description": "Storage version of v1api20220901.ImmutableStorageAccount_STATUS\nThis property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "enabled": {
              "type": "boolean"
            },
            "immutabilityPolicy": {
              "description": "Storage version of v1api20220901.AccountImmutabilityPolicyProperties_STATUS\nThis defines account-level immutability policy properties.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "allowProtectedAppendWrites": {
                  "type": "boolean"
                },
                "immutabilityPeriodSinceCreationInDays": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "type": "boolean"
        },
        "isLocalUserEnabled": {
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "type": "boolean"
        },
        "isSftpEnabled": {
          "type": "boolean"
        },
        "keyCreationTime": {
          "description": "Storage version of v1api20220901.KeyCreationTime_STATUS\nStorage account keys creation time.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "key1": {
              "type": "string"
            },
            "key2": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "keyPolicy": {
          "description": "Storage version of v1api20220901.KeyPolicy_STATUS\nKeyPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "keyExpirationPeriodInDays": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        },
        "largeFileSharesState": {
          "type": "string"
        },
        "lastGeoFailoverTime": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "minimumTlsVersion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkAcls": {
          "description": "Storage version of v1api20220901.NetworkRuleSet_STATUS\nNetwork rule set",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "bypass": {
              "type": "string"
            },
            "defaultAction": {
              "type": "string"
            },
            "ipRules": {
              "items": {
                "description": "Storage version of v1api20220901.IPRule_STATUS\nIP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "items": {
                "description": "Storage version of v1api20220901.ResourceAccessRule_STATUS\nResource Access Rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "resourceId": {
                    "type": "string"
                  },
                  "tenantId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "items": {
                "description": "Storage version of v1api20220901.VirtualNetworkRule_STATUS\nVirtual Network rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "primaryEndpoints": {
          "description": "Storage version of v1api20220901.Endpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "blob": {
              "type": "string"
            },
            "dfs": {
              "type": "string"
            },
            "file": {
              "type": "string"
            },
            "internetEndpoints": {
              "description": "Storage version of v1api20220901.StorageAccountInternetEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "Storage version of v1api20220901.StorageAccountMicrosoftEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing\nendpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "queue": {
                  "type": "string"
                },
                "table": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "type": "string"
            },
            "table": {
              "type": "string"
            },
            "web": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "primaryLocation": {
          "type": "string"
        },
        "privateEndpointConnections": {
          "items": {
            "description": "Storage version of v1api20220901.PrivateEndpointConnection_STATUS\nThe Private Endpoint Connection resource.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "id": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "provisioningState": {
          "type": "string"
        },
        "publicNetworkAccess": {
          "type": "string"
        },
        "routingPreference": {
          "description": "Storage version of v1api20220901.RoutingPreference_STATUS\nRouting preference defines the type of network, either microsoft or internet routing to be used to deliver the user\ndata, the default option is microsoft routing",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "publishInternetEndpoints": {
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "type": "boolean"
            },
            "routingChoice": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "Storage version of v1api20220901.SasPolicy_STATUS\nSasPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "expirationAction": {
              "type": "string"
            },
            "sasExpirationPeriod": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryEndpoints": {
          "description": "Storage version of v1api20220901.Endpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "blob": {
              "type": "string"
            },
            "dfs": {
              "type": "string"
            },
            "file": {
              "type": "string"
            },
            "internetEndpoints": {
              "description": "Storage version of v1api20220901.StorageAccountInternetEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "Storage version of v1api20220901.StorageAccountMicrosoftEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing\nendpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "queue": {
                  "type": "string"
                },
                "table": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "type": "string"
            },
            "table": {
              "type": "string"
            },
            "web": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryLocation": {
          "type": "string"
        },
        "sku": {
          "description": "Storage version of v1api20220901.Sku_STATUS\nThe SKU of the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "statusOfPrimary": {
          "type": "string"
        },
        "statusOfSecondary": {
          "type": "string"
        },
        "storageAccountSkuConversionStatus": {
          "description": "Storage version of v1api20220901.StorageAccountSkuConversionStatus_STATUS\nThis defines the sku conversion status object for asynchronous sku conversions.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "endTime": {
              "type": "string"
            },
            "skuConversionStatus": {
              "type": "string"
            },
            "startTime": {
              "type": "string"
            },
            "targetSkuName": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Generator information:\n- Generated from: /storage/resource-manager/Microsoft.Storage/stable/2023-01-01/storage.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "accessTier": {
          "description": "AccessTier: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium'\naccess tier is the default value for premium block blobs storage account type and it cannot be changed for the premium\nblock blobs storage account type.",
          "enum": [
            "Cool",
            "Hot",
            "Premium"
          ],
          "type": "string"
        },
        "allowBlobPublicAccess": {
          "description": "AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default\ninterpretation is false for this property.",
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "description": "AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. Set this property to true for new or\nexisting accounts only if object replication policies will involve storage accounts in different AAD tenants. The\ndefault interpretation is false for new accounts to follow best security practices by default.",
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "description": "AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access\nkey via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure\nActive Directory (Azure AD). The default value is null, which is equivalent to true.",
          "type": "boolean"
        },
        "allowedCopyScope": {
          "description": "AllowedCopyScope: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.",
          "enum": [
            "AAD",
            "PrivateLink"
          ],
          "type": "string"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "AzureFilesIdentityBasedAuthentication: Provides the identity based authentication settings for Azure Files.",
          "properties": {
            "activeDirectoryProperties": {
              "description": "ActiveDirectoryProperties: Required if directoryServiceOptions are AD, optional if they are AADKERB.",
              "properties": {
                "accountType": {
                  "description": "AccountType: Specifies the Active Directory account type for Azure Storage.",
                  "enum": [
                    "Computer",
                    "User"
                  ],
                  "type": "string"
                },
                "azureStorageSid": {
                  "description": "AzureStorageSid: Specifies the security identifier (SID) for Azure Storage.",
                  "type": "string"
                },
                "domainGuid": {
                  "description": "DomainGuid: Specifies the domain GUID.",
                  "type": "string"
                },
                "domainName": {
                  "description": "DomainName: Specifies the primary domain that the AD DNS server is authoritative for.",
                  "type": "string"
                },
                "domainSid": {
                  "description": "DomainSid: Specifies the security identifier (SID).",
                  "type": "string"
                },
                "forestName": {
                  "description": "ForestName: Specifies the Active Directory forest to get.",
                  "type": "string"
                },
                "netBiosDomainName": {
                  "description": "NetBiosDomainName: Specifies the NetBIOS domain name.",
                  "type": "string"
                },
                "samAccountName": {
                  "description": "SamAccountName: Specifies the Active Directory SAMAccountName for Azure Storage.",
                  "type": "string"
                }
              },
              "required": [
                "domainGuid",
                "domainName"
              ],
              "type": "object"
            },
            "defaultSharePermission": {
              "description": "DefaultSharePermission: Default share permission for users using Kerberos authentication if RBAC role is not assigned.",
              "enum": [
                "None",
                "StorageFileDataSmbShareContributor",
                "StorageFileDataSmbShareElevatedContributor",
                "StorageFileDataSmbShareReader"
              ],
              "type": "string"
            },
            "directoryServiceOptions": {
              "description": "DirectoryServiceOptions: Indicates the directory service used. Note that this enum may be extended in the future.",
              "enum": [
                "AADDS",
                "AADKERB",
                "AD",
                "None"
              ],
              "type": "string"
            }
          },
          "required": [
            "directoryServiceOptions"
          ],
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "maxLength": 24,
          "minLength": 3,
          "pattern": "^[a-z0-9]+$",
          "type": "string"
        },
        "customDomain": {
          "description": "CustomDomain: User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported\nper storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name\nproperty.",
          "properties": {
            "name": {
              "description": "Name: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
              "type": "string"
            },
            "useSubDomainName": {
              "description": "UseSubDomainName: Indicates whether indirect CName validation is enabled. Default value is false. This should only be\nset on updates.",
              "type": "boolean"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "defaultToOAuthAuthentication": {
          "description": "DefaultToOAuthAuthentication: A boolean flag which indicates whether the default authentication is OAuth or not. The\ndefault interpretation is false for this property.",
          "type": "boolean"
        },
        "dnsEndpointType": {
          "description": "DnsEndpointType: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of\naccounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an\nalphanumeric DNS Zone identifier.",
          "enum": [
            "AzureDnsZone",
            "Standard"
          ],
          "type": "string"
        },
        "encryption": {
          "description": "Encryption: Encryption settings to be used for server-side encryption for the storage account.",
          "properties": {
            "identity": {
              "description": "Identity: The identity to be used with service-side encryption at rest.",
              "properties": {
                "federatedIdentityClientId": {
                  "description": "FederatedIdentityClientId: ClientId of the multi-tenant application to be used in conjunction with the user-assigned\nidentity for cross-tenant customer-managed-keys server-side encryption on the storage account.",
                  "type": "string"
                },
                "userAssignedIdentityReference": {
                  "description": "UserAssignedIdentityReference: Resource identifier of the UserAssigned identity to be associated with server-side\nencryption on the storage account.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "keySource": {
              "description": "KeySource: The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage,\nMicrosoft.Keyvault",
              "enum": [
                "Microsoft.Keyvault",
                "Microsoft.Storage"
              ],
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Keyvaultproperties: Properties provided by key vault.",
              "properties": {
                "keyname": {
                  "description": "Keyname: The name of KeyVault key.",
                  "type": "string"
                },
                "keyvaulturi": {
                  "description": "Keyvaulturi: The Uri of KeyVault.",
                  "type": "string"
                },
                "keyversion": {
                  "description": "Keyversion: The version of KeyVault key.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "description": "RequireInfrastructureEncryption: A boolean indicating whether or not the service applies a secondary layer of encryption\nwith platform managed keys for data at rest.",
              "type": "boolean"
            },
            "services": {
              "description": "Services: List of services which support encryption.",
              "properties": {
                "blob": {
                  "description": "Blob: The encryption function of the blob storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "File: The encryption function of the file storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Queue: The encryption function of the queue storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Table: The encryption function of the table storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "enum": [
                        "Account",
                        "Service"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: Optional. Set the extended location of the resource. If not set, the storage account will be created\nin Azure main region. Otherwise it will be created in the specified extended location",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity": {
          "description": "Identity: The identity of the resource.",
          "properties": {
            "type": {
              "description": "Type: The identity type.",
              "enum": [
                "None",
                "SystemAssigned",
                "SystemAssigned,UserAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "UserAssignedIdentities: Gets or sets a list of key value pairs that describe the set of User Assigned identities that\nwill be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned\nidentity is permitted here.",
              "items": {
                "description": "Information about the user assigned identity for the resource",
                "properties": {
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        "immutableStorageWithVersioning": {
          "description": "ImmutableStorageWithVersioning: The property is immutable and can only be set to true at the account creation time. When\nset to true, it enables object level immutability for all the new containers in the account by default.",
          "properties": {
            "enabled": {
              "description": "Enabled: A boolean flag which enables account-level immutability. All the containers under such an account have\nobject-level immutability enabled by default.",
              "type": "boolean"
            },
            "immutabilityPolicy": {
              "description": "ImmutabilityPolicy: Specifies the default account-level immutability policy which is inherited and applied to objects\nthat do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher\nprecedence than the container-level immutability policy, which has a higher precedence than the account-level\nimmutability policy.",
              "properties": {
                "allowProtectedAppendWrites": {
                  "description": "AllowProtectedAppendWrites: This property can only be changed for disabled and unlocked time-based retention policies.\nWhen enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only\nnew blocks can be added and any existing blocks cannot be modified or deleted.",
                  "type": "boolean"
                },
                "immutabilityPeriodSinceCreationInDays": {
                  "description": "ImmutabilityPeriodSinceCreationInDays: The immutability period for the blobs in the container since the policy creation,\nin days.",
                  "maximum": 146000,
                  "minimum": 1,
                  "type": "integer"
                },
                "state": {
                  "description": "State: The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state\nallows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites\nproperty, Locked state only allows the increase of the immutability retention time. A policy can only be created in a\nDisabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition\nto a Locked state which cannot be reverted.",
                  "enum": [
                    "Disabled",
                    "Locked",
                    "Unlocked"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "description": "IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.",
          "type": "boolean"
        },
        "isLocalUserEnabled": {
          "description": "IsLocalUserEnabled: Enables local users feature, if set to true",
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "description": "IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.",
          "type": "boolean"
        },
        "isSftpEnabled": {
          "description": "IsSftpEnabled: Enables Secure File Transfer Protocol, if set to true",
          "type": "boolean"
        },
        "keyPolicy": {
          "description": "KeyPolicy: KeyPolicy assigned to the storage account.",
          "properties": {
            "keyExpirationPeriodInDays": {
              "description": "KeyExpirationPeriodInDays: The key expiration period in days.",
              "type": "integer"
            }
          },
          "required": [
            "keyExpirationPeriodInDays"
          ],
          "type": "object"
        },
        "kind": {
          "description": "Kind: Required. Indicates the type of storage account.",
          "enum": [
            "BlobStorage",
            "BlockBlobStorage",
            "FileStorage",
            "Storage",
            "StorageV2"
          ],
          "type": "string"
        },
        "largeFileSharesState": {
          "description": "LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location: Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure\nGeo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is\ncreated, but if an identical geo region is specified on update, the request will succeed.",
          "type": "string"
        },
        "minimumTlsVersion": {
          "description": "MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS\n1.0 for this property.",
          "enum": [
            "TLS1_0",
            "TLS1_1",
            "TLS1_2"
          ],
          "type": "string"
        },
        "networkAcls": {
          "description": "NetworkAcls: Network rule set",
          "properties": {
            "bypass": {
              "description": "Bypass: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of\nLogging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
              "type": "string"
            },
            "defaultAction": {
              "description": "DefaultAction: Specifies the default action of allow or deny when no other rules match.",
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            "ipRules": {
              "description": "IpRules: Sets the IP ACL rules",
              "items": {
                "description": "IP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "action": {
                    "description": "Action: The action of IP ACL rule.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
                    "type": "string"
                  },
                  "valueFromConfig": {
                    "description": "ValueFromConfig: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
                    "properties": {
                      "key": {
                        "description": "Key is the key in the Kubernetes configmap being referenced",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the name of the Kubernetes configmap being referenced.\nThe configmap must be in the same namespace as the resource",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "description": "ResourceAccessRules: Sets the resource access rules",
              "items": {
                "description": "Resource Access Rule.",
                "properties": {
                  "resourceReference": {
                    "description": "ResourceReference: Resource Id",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "tenantId": {
                    "description": "TenantId: Tenant Id",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "description": "VirtualNetworkRules: Sets the virtual network rules",
              "items": {
                "description": "Virtual Network rule.",
                "properties": {
                  "action": {
                    "description": "Action: The action of virtual network rule.",
                    "enum": [
                      "Allow"
                    ],
                    "type": "string"
                  },
                  "reference": {
                    "description": "Reference: Resource ID of a subnet, for example:\n/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "description": "State: Gets the state of virtual network rule.",
                    "enum": [
                      "Deprovisioning",
                      "Failed",
                      "NetworkSourceDeleted",
                      "Provisioning",
                      "Succeeded"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "reference"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "defaultAction"
          ],
          "type": "object"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "configMaps": {
              "description": "ConfigMaps: configures where to place operator written ConfigMaps.",
              "properties": {
                "blobEndpoint": {
                  "description": "BlobEndpoint: indicates where the BlobEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "DfsEndpoint: indicates where the DfsEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "FileEndpoint: indicates where the FileEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "QueueEndpoint: indicates where the QueueEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "TableEndpoint: indicates where the TableEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "WebEndpoint: indicates where the WebEndpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secrets": {
              "description": "Secrets: configures where to place Azure generated secrets.",
              "properties": {
                "blobEndpoint": {
                  "description": "BlobEndpoint: indicates where the BlobEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "DfsEndpoint: indicates where the DfsEndpoint secret should be placed. If omitted, the secret will not be retrieved from\nAzure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "FileEndpoint: indicates where the FileEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key1": {
                  "description": "Key1: indicates where the Key1 secret should be placed. If omitted, the secret will not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key2": {
                  "description": "Key2: indicates where the Key2 secret should be placed. If omitted, the secret will not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "QueueEndpoint: indicates where the QueueEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "TableEndpoint: indicates where the TableEndpoint secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "WebEndpoint: indicates where the WebEndpoint secret should be placed. If omitted, the secret will not be retrieved from\nAzure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: Allow or disallow public network access to Storage Account. Value is optional but if passed in,\nmust be 'Enabled' or 'Disabled'.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "routingPreference": {
          "description": "RoutingPreference: Maintains information about the network routing choice opted by the user for data transfer",
          "properties": {
            "publishInternetEndpoints": {
              "description": "PublishInternetEndpoints: A boolean flag which indicates whether internet routing storage endpoints are to be published",
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "description": "PublishMicrosoftEndpoints: A boolean flag which indicates whether microsoft routing storage endpoints are to be published",
              "type": "boolean"
            },
            "routingChoice": {
              "description": "RoutingChoice: Routing Choice defines the kind of network routing opted by the user.",
              "enum": [
                "InternetRouting",
                "MicrosoftRouting"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "SasPolicy: SasPolicy assigned to the storage account.",
          "properties": {
            "expirationAction": {
              "description": "ExpirationAction: The SAS expiration action. Can only be Log.",
              "enum": [
                "Log"
              ],
              "type": "string"
            },
            "sasExpirationPeriod": {
              "description": "SasExpirationPeriod: The SAS expiration period, DD.HH:MM:SS.",
              "type": "string"
            }
          },
          "required": [
            "expirationAction",
            "sasExpirationPeriod"
          ],
          "type": "object"
        },
        "sku": {
          "description": "Sku: Required. Gets or sets the SKU name.",
          "properties": {
            "name": {
              "description": "Name: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called\n accountType.",
              "enum": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
              ],
              "type": "string"
            },
            "tier": {
              "description": "Tier: The SKU tier. This is based on the SKU name.",
              "enum": [
                "Premium",
                "Standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "description": "SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true. The default value is true since\nAPI version 2019-04-01.",
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping\nthis resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key\nwith a length no greater than 128 characters and a value with a length no greater than 256 characters.",
          "type": "object"
        }
      },
      "required": [
        "kind",
        "location",
        "owner",
        "sku"
      ],
      "type": "object"
    },
    "status": {
      "description": "The storage account.",
      "properties": {
        "accessTier": {
          "description": "AccessTier: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium'\naccess tier is the default value for premium block blobs storage account type and it cannot be changed for the premium\nblock blobs storage account type.",
          "type": "string"
        },
        "accountMigrationInProgress": {
          "description": "AccountMigrationInProgress: If customer initiated account migration is in progress, the value will be true else it will\nbe null.",
          "type": "boolean"
        },
        "allowBlobPublicAccess": {
          "description": "AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default\ninterpretation is false for this property.",
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "description": "AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. Set this property to true for new or\nexisting accounts only if object replication policies will involve storage accounts in different AAD tenants. The\ndefault interpretation is false for new accounts to follow best security practices by default.",
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "description": "AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access\nkey via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure\nActive Directory (Azure AD). The default value is null, which is equivalent to true.",
          "type": "boolean"
        },
        "allowedCopyScope": {
          "description": "AllowedCopyScope: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.",
          "type": "string"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "AzureFilesIdentityBasedAuthentication: Provides the identity based authentication settings for Azure Files.",
          "properties": {
            "activeDirectoryProperties": {
              "description": "ActiveDirectoryProperties: Required if directoryServiceOptions are AD, optional if they are AADKERB.",
              "properties": {
                "accountType": {
                  "description": "AccountType: Specifies the Active Directory account type for Azure Storage.",
                  "type": "string"
                },
                "azureStorageSid": {
                  "description": "AzureStorageSid: Specifies the security identifier (SID) for Azure Storage.",
                  "type": "string"
                },
                "domainGuid": {
                  "description": "DomainGuid: Specifies the domain GUID.",
                  "type": "string"
                },
                "domainName": {
                  "description": "DomainName: Specifies the primary domain that the AD DNS server is authoritative for.",
                  "type": "string"
                },
                "domainSid": {
                  "description": "DomainSid: Specifies the security identifier (SID).",
                  "type": "string"
                },
                "forestName": {
                  "description": "ForestName: Specifies the Active Directory forest to get.",
                  "type": "string"
                },
                "netBiosDomainName": {
                  "description": "NetBiosDomainName: Specifies the NetBIOS domain name.",
                  "type": "string"
                },
                "samAccountName": {
                  "description": "SamAccountName: Specifies the Active Directory SAMAccountName for Azure Storage.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "defaultSharePermission": {
              "description": "DefaultSharePermission: Default share permission for users using Kerberos authentication if RBAC role is not assigned.",
              "type": "string"
            },
            "directoryServiceOptions": {
              "description": "DirectoryServiceOptions: Indicates the directory service used. Note that this enum may be extended in the future.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "blobRestoreStatus": {
          "description": "BlobRestoreStatus: Blob restore status",
          "properties": {
            "failureReason": {
              "description": "FailureReason: Failure reason when blob restore is failed.",
              "type": "string"
            },
            "parameters": {
              "description": "Parameters: Blob restore request parameters.",
              "properties": {
                "blobRanges": {
                  "description": "BlobRanges: Blob ranges to restore.",
                  "items": {
                    "description": "Blob range",
                    "properties": {
                      "endRange": {
                        "description": "EndRange: Blob end range. This is exclusive. Empty means account end.",
                        "type": "string"
                      },
                      "startRange": {
                        "description": "StartRange: Blob start range. This is inclusive. Empty means account start.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "timeToRestore": {
                  "description": "TimeToRestore: Restore blob to the specified time.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "restoreId": {
              "description": "RestoreId: Id for tracking blob restore request.",
              "type": "string"
            },
            "status": {
              "description": "Status: The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing.\n- Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "creationTime": {
          "description": "CreationTime: Gets the creation date and time of the storage account in UTC.",
          "type": "string"
        },
        "customDomain": {
          "description": "CustomDomain: Gets the custom domain the user assigned to this storage account.",
          "properties": {
            "name": {
              "description": "Name: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
              "type": "string"
            },
            "useSubDomainName": {
              "description": "UseSubDomainName: Indicates whether indirect CName validation is enabled. Default value is false. This should only be\nset on updates.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "defaultToOAuthAuthentication": {
          "description": "DefaultToOAuthAuthentication: A boolean flag which indicates whether the default authentication is OAuth or not. The\ndefault interpretation is false for this property.",
          "type": "boolean"
        },
        "dnsEndpointType": {
          "description": "DnsEndpointType: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of\naccounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an\nalphanumeric DNS Zone identifier.",
          "type": "string"
        },
        "encryption": {
          "description": "Encryption: Encryption settings to be used for server-side encryption for the storage account.",
          "properties": {
            "identity": {
              "description": "Identity: The identity to be used with service-side encryption at rest.",
              "properties": {
                "federatedIdentityClientId": {
                  "description": "FederatedIdentityClientId: ClientId of the multi-tenant application to be used in conjunction with the user-assigned\nidentity for cross-tenant customer-managed-keys server-side encryption on the storage account.",
                  "type": "string"
                },
                "userAssignedIdentity": {
                  "description": "UserAssignedIdentity: Resource identifier of the UserAssigned identity to be associated with server-side encryption on\nthe storage account.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "keySource": {
              "description": "KeySource: The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage,\nMicrosoft.Keyvault",
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Keyvaultproperties: Properties provided by key vault.",
              "properties": {
                "currentVersionedKeyExpirationTimestamp": {
                  "description": "CurrentVersionedKeyExpirationTimestamp: This is a read only property that represents the expiration time of the current\nversion of the customer managed key used for encryption.",
                  "type": "string"
                },
                "currentVersionedKeyIdentifier": {
                  "description": "CurrentVersionedKeyIdentifier: The object identifier of the current versioned Key Vault Key in use.",
                  "type": "string"
                },
                "keyname": {
                  "description": "Keyname: The name of KeyVault key.",
                  "type": "string"
                },
                "keyvaulturi": {
                  "description": "Keyvaulturi: The Uri of KeyVault.",
                  "type": "string"
                },
                "keyversion": {
                  "description": "Keyversion: The version of KeyVault key.",
                  "type": "string"
                },
                "lastKeyRotationTimestamp": {
                  "description": "LastKeyRotationTimestamp: Timestamp of last rotation of the Key Vault Key.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "description": "RequireInfrastructureEncryption: A boolean indicating whether or not the service applies a secondary layer of encryption\nwith platform managed keys for data at rest.",
              "type": "boolean"
            },
            "services": {
              "description": "Services: List of services which support encryption.",
              "properties": {
                "blob": {
                  "description": "Blob: The encryption function of the blob storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is\nencrypted at rest by default today and cannot be disabled.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "File: The encryption function of the file storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is\nencrypted at rest by default today and cannot be disabled.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Queue: The encryption function of the queue storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is\nencrypted at rest by default today and cannot be disabled.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Table: The encryption function of the table storage service.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is\nenabled by default today and cannot be disabled.",
                      "type": "boolean"
                    },
                    "keyType": {
                      "description": "KeyType: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped\nencryption key will be used. 'Service' key type implies that a default service key is used.",
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "description": "LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is\nencrypted at rest by default today and cannot be disabled.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extendedLocation of the resource.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "failoverInProgress": {
          "description": "FailoverInProgress: If the failover is in progress, the value will be true, otherwise, it will be null.",
          "type": "boolean"
        },
        "geoReplicationStats": {
          "description": "GeoReplicationStats: Geo Replication Stats",
          "properties": {
            "canFailover": {
              "description": "CanFailover: A boolean flag which indicates whether or not account failover is supported for the account.",
              "type": "boolean"
            },
            "canPlannedFailover": {
              "description": "CanPlannedFailover: A boolean flag which indicates whether or not planned account failover is supported for the account.",
              "type": "boolean"
            },
            "lastSyncTime": {
              "description": "LastSyncTime: All primary writes preceding this UTC date/time value are guaranteed to be available for read operations.\nPrimary writes following this point in time may or may not be available for reads. Element may be default value if value\nof LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.",
              "type": "string"
            },
            "postFailoverRedundancy": {
              "description": "PostFailoverRedundancy: The redundancy type of the account after an account failover is performed.",
              "type": "string"
            },
            "postPlannedFailoverRedundancy": {
              "description": "PostPlannedFailoverRedundancy: The redundancy type of the account after a planned account failover is performed.",
              "type": "string"
            },
            "status": {
              "description": "Status: The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is\nactive and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary\nlocation is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the\nsecondary location is temporarily unavailable.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "identity": {
          "description": "Identity: The identity of the resource.",
          "properties": {
            "principalId": {
              "description": "PrincipalId: The principal ID of resource identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "TenantId: The tenant ID of resource.",
              "type": "string"
            },
            "type": {
              "description": "Type: The identity type.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "description": "UserAssignedIdentity for the resource.",
                "properties": {
                  "clientId": {
                    "description": "ClientId: The client ID of the identity.",
                    "type": "string"
                  },
                  "principalId": {
                    "description": "PrincipalId: The principal ID of the identity.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": "UserAssignedIdentities: Gets or sets a list of key value pairs that describe the set of User Assigned identities that\nwill be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned\nidentity is permitted here.",
              "type": "object"
            }
          },
          "type": "object"
        },
        "immutableStorageWithVersioning": {
          "description": "ImmutableStorageWithVersioning: The property is immutable and can only be set to true at the account creation time. When\nset to true, it enables object level immutability for all the containers in the account by default.",
          "properties": {
            "enabled": {
              "description": "Enabled: A boolean flag which enables account-level immutability. All the containers under such an account have\nobject-level immutability enabled by default.",
              "type": "boolean"
            },
            "immutabilityPolicy": {
              "description": "ImmutabilityPolicy: Specifies the default account-level immutability policy which is inherited and applied to objects\nthat do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher\nprecedence than the container-level immutability policy, which has a higher precedence than the account-level\nimmutability policy.",
              "properties": {
                "allowProtectedAppendWrites": {
                  "description": "AllowProtectedAppendWrites: This property can only be changed for disabled and unlocked time-based retention policies.\nWhen enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only\nnew blocks can be added and any existing blocks cannot be modified or deleted.",
                  "type": "boolean"
                },
                "immutabilityPeriodSinceCreationInDays": {
                  "description": "ImmutabilityPeriodSinceCreationInDays: The immutability period for the blobs in the container since the policy creation,\nin days.",
                  "type": "integer"
                },
                "state": {
                  "description": "State: The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state\nallows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites\nproperty, Locked state only allows the increase of the immutability retention time. A policy can only be created in a\nDisabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition\nto a Locked state which cannot be reverted.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "description": "IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.",
          "type": "boolean"
        },
        "isLocalUserEnabled": {
          "description": "IsLocalUserEnabled: Enables local users feature, if set to true",
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "description": "IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.",
          "type": "boolean"
        },
        "isSftpEnabled": {
          "description": "IsSftpEnabled: Enables Secure File Transfer Protocol, if set to true",
          "type": "boolean"
        },
        "isSkuConversionBlocked": {
          "description": "IsSkuConversionBlocked: This property will be set to true or false on an event of ongoing migration. Default value is\nnull.",
          "type": "boolean"
        },
        "keyCreationTime": {
          "description": "KeyCreationTime: Storage account keys creation time.",
          "properties": {
            "key1": {
              "type": "string"
            },
            "key2": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "keyPolicy": {
          "description": "KeyPolicy: KeyPolicy assigned to the storage account.",
          "properties": {
            "keyExpirationPeriodInDays": {
              "description": "KeyExpirationPeriodInDays: The key expiration period in days.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "kind": {
          "description": "Kind: Gets the Kind.",
          "type": "string"
        },
        "largeFileSharesState": {
          "description": "LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
          "type": "string"
        },
        "lastGeoFailoverTime": {
          "description": "LastGeoFailoverTime: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the\nmost recent timestamp is retained. This element is not returned if there has never been a failover instance. Only\navailable if the accountType is Standard_GRS or Standard_RAGRS.",
          "type": "string"
        },
        "location": {
          "description": "Location: The geo-location where the resource lives",
          "type": "string"
        },
        "minimumTlsVersion": {
          "description": "MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS\n1.0 for this property.",
          "type": "string"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "networkAcls": {
          "description": "NetworkAcls: Network rule set",
          "properties": {
            "bypass": {
              "description": "Bypass: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of\nLogging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
              "type": "string"
            },
            "defaultAction": {
              "description": "DefaultAction: Specifies the default action of allow or deny when no other rules match.",
              "type": "string"
            },
            "ipRules": {
              "description": "IpRules: Sets the IP ACL rules",
              "items": {
                "description": "IP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "action": {
                    "description": "Action: The action of IP ACL rule.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "description": "ResourceAccessRules: Sets the resource access rules",
              "items": {
                "description": "Resource Access Rule.",
                "properties": {
                  "resourceId": {
                    "description": "ResourceId: Resource Id",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "TenantId: Tenant Id",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "description": "VirtualNetworkRules: Sets the virtual network rules",
              "items": {
                "description": "Virtual Network rule.",
                "properties": {
                  "action": {
                    "description": "Action: The action of virtual network rule.",
                    "type": "string"
                  },
                  "id": {
                    "description": "Id: Resource ID of a subnet, for example:\n/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
                    "type": "string"
                  },
                  "state": {
                    "description": "State: Gets the state of virtual network rule.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "primaryEndpoints": {
          "description": "PrimaryEndpoints: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that\nStandard_ZRS and Premium_LRS accounts only return the blob endpoint.",
          "properties": {
            "blob": {
              "description": "Blob: Gets the blob endpoint.",
              "type": "string"
            },
            "dfs": {
              "description": "Dfs: Gets the dfs endpoint.",
              "type": "string"
            },
            "file": {
              "description": "File: Gets the file endpoint.",
              "type": "string"
            },
            "internetEndpoints": {
              "description": "InternetEndpoints: Gets the internet routing storage endpoints",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "MicrosoftEndpoints: Gets the microsoft routing storage endpoints.",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "queue": {
                  "description": "Queue: Gets the queue endpoint.",
                  "type": "string"
                },
                "table": {
                  "description": "Table: Gets the table endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "description": "Queue: Gets the queue endpoint.",
              "type": "string"
            },
            "table": {
              "description": "Table: Gets the table endpoint.",
              "type": "string"
            },
            "web": {
              "description": "Web: Gets the web endpoint.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "primaryLocation": {
          "description": "PrimaryLocation: Gets the location of the primary data center for the storage account.",
          "type": "string"
        },
        "privateEndpointConnections": {
          "description": "PrivateEndpointConnections: List of private endpoint connection associated with the specified storage account",
          "items": {
            "description": "The Private Endpoint Connection resource.",
            "properties": {
              "id": {
                "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "ProvisioningState: Gets the status of the storage account at the time the operation was called.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: Allow or disallow public network access to Storage Account. Value is optional but if passed in,\nmust be 'Enabled' or 'Disabled'.",
          "type": "string"
        },
        "routingPreference": {
          "description": "RoutingPreference: Maintains information about the network routing choice opted by the user for data transfer",
          "properties": {
            "publishInternetEndpoints": {
              "description": "PublishInternetEndpoints: A boolean flag which indicates whether internet routing storage endpoints are to be published",
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "description": "PublishMicrosoftEndpoints: A boolean flag which indicates whether microsoft routing storage endpoints are to be published",
              "type": "boolean"
            },
            "routingChoice": {
              "description": "RoutingChoice: Routing Choice defines the kind of network routing opted by the user.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "SasPolicy: SasPolicy assigned to the storage account.",
          "properties": {
            "expirationAction": {
              "description": "ExpirationAction: The SAS expiration action. Can only be Log.",
              "type": "string"
            },
            "sasExpirationPeriod": {
              "description": "SasExpirationPeriod: The SAS expiration period, DD.HH:MM:SS.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryEndpoints": {
          "description": "SecondaryEndpoints: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the\nsecondary location of the storage account. Only available if the SKU name is Standard_RAGRS.",
          "properties": {
            "blob": {
              "description": "Blob: Gets the blob endpoint.",
              "type": "string"
            },
            "dfs": {
              "description": "Dfs: Gets the dfs endpoint.",
              "type": "string"
            },
            "file": {
              "description": "File: Gets the file endpoint.",
              "type": "string"
            },
            "internetEndpoints": {
              "description": "InternetEndpoints: Gets the internet routing storage endpoints",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "MicrosoftEndpoints: Gets the microsoft routing storage endpoints.",
              "properties": {
                "blob": {
                  "description": "Blob: Gets the blob endpoint.",
                  "type": "string"
                },
                "dfs": {
                  "description": "Dfs: Gets the dfs endpoint.",
                  "type": "string"
                },
                "file": {
                  "description": "File: Gets the file endpoint.",
                  "type": "string"
                },
                "queue": {
                  "description": "Queue: Gets the queue endpoint.",
                  "type": "string"
                },
                "table": {
                  "description": "Table: Gets the table endpoint.",
                  "type": "string"
                },
                "web": {
                  "description": "Web: Gets the web endpoint.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "description": "Queue: Gets the queue endpoint.",
              "type": "string"
            },
            "table": {
              "description": "Table: Gets the table endpoint.",
              "type": "string"
            },
            "web": {
              "description": "Web: Gets the web endpoint.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryLocation": {
          "description": "SecondaryLocation: Gets the location of the geo-replicated secondary for the storage account. Only available if the\naccountType is Standard_GRS or Standard_RAGRS.",
          "type": "string"
        },
        "sku": {
          "description": "Sku: Gets the SKU.",
          "properties": {
            "name": {
              "description": "Name: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called\n accountType.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: The SKU tier. This is based on the SKU name.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "statusOfPrimary": {
          "description": "StatusOfPrimary: Gets the status indicating whether the primary location of the storage account is available or\nunavailable.",
          "type": "string"
        },
        "statusOfSecondary": {
          "description": "StatusOfSecondary: Gets the status indicating whether the secondary location of the storage account is available or\nunavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.",
          "type": "string"
        },
        "storageAccountSkuConversionStatus": {
          "description": "StorageAccountSkuConversionStatus: This property is readOnly and is set by server during asynchronous storage account\nsku conversion operations.",
          "properties": {
            "endTime": {
              "description": "EndTime: This property represents the sku conversion end time.",
              "type": "string"
            },
            "skuConversionStatus": {
              "description": "SkuConversionStatus: This property indicates the current sku conversion status.",
              "type": "string"
            },
            "startTime": {
              "description": "StartTime: This property represents the sku conversion start time.",
              "type": "string"
            },
            "targetSkuName": {
              "description": "TargetSkuName: This property represents the target sku name to which the account sku is being converted asynchronously.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "description": "SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true.",
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Storage version of v1api20230101.StorageAccount\nGenerator information:\n- Generated from: /storage/resource-manager/Microsoft.Storage/stable/2023-01-01/storage.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Storage version of v1api20230101.StorageAccount_Spec",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "accessTier": {
          "type": "string"
        },
        "allowBlobPublicAccess": {
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "type": "boolean"
        },
        "allowedCopyScope": {
          "type": "string"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "Storage version of v1api20230101.AzureFilesIdentityBasedAuthentication\nSettings for Azure Files identity based authentication.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "activeDirectoryProperties": {
              "description": "Storage version of v1api20230101.ActiveDirectoryProperties\nSettings properties for Active Directory (AD).",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "accountType": {
                  "type": "string"
                },
                "azureStorageSid": {
                  "type": "string"
                },
                "domainGuid": {
                  "type": "string"
                },
                "domainName": {
                  "type": "string"
                },
                "domainSid": {
                  "type": "string"
                },
                "forestName": {
                  "type": "string"
                },
                "netBiosDomainName": {
                  "type": "string"
                },
                "samAccountName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "defaultSharePermission": {
              "type": "string"
            },
            "directoryServiceOptions": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "customDomain": {
          "description": "Storage version of v1api20230101.CustomDomain\nThe custom domain assigned to this storage account. This can be set via Update.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "useSubDomainName": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "defaultToOAuthAuthentication": {
          "type": "boolean"
        },
        "dnsEndpointType": {
          "type": "string"
        },
        "encryption": {
          "description": "Storage version of v1api20230101.Encryption\nThe encryption settings on the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "identity": {
              "description": "Storage version of v1api20230101.EncryptionIdentity\nEncryption identity for the storage account.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "federatedIdentityClientId": {
                  "type": "string"
                },
                "userAssignedIdentityReference": {
                  "description": "UserAssignedIdentityReference: Resource identifier of the UserAssigned identity to be associated with server-side\nencryption on the storage account.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "keySource": {
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Storage version of v1api20230101.KeyVaultProperties\nProperties of key vault.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "keyname": {
                  "type": "string"
                },
                "keyvaulturi": {
                  "type": "string"
                },
                "keyversion": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "type": "boolean"
            },
            "services": {
              "description": "Storage version of v1api20230101.EncryptionServices\nA list of services that support encryption.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "description": "Storage version of v1api20230101.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "Storage version of v1api20230101.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Storage version of v1api20230101.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Storage version of v1api20230101.EncryptionService\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "Storage version of v1api20230101.ExtendedLocation\nThe complex type of the extended location.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "identity": {
          "description": "Storage version of v1api20230101.Identity\nIdentity for the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "type": {
              "type": "string"
            },
            "userAssignedIdentities": {
              "items": {
                "description": "Storage version of v1api20230101.UserAssignedIdentityDetails\nInformation about the user assigned identity for the resource",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "immutableStorageWithVersioning": {
          "description": "Storage version of v1api20230101.ImmutableStorageAccount\nThis property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "enabled": {
              "type": "boolean"
            },
            "immutabilityPolicy": {
              "description": "Storage version of v1api20230101.AccountImmutabilityPolicyProperties\nThis defines account-level immutability policy properties.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "allowProtectedAppendWrites": {
                  "type": "boolean"
                },
                "immutabilityPeriodSinceCreationInDays": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "type": "boolean"
        },
        "isLocalUserEnabled": {
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "type": "boolean"
        },
        "isSftpEnabled": {
          "type": "boolean"
        },
        "keyPolicy": {
          "description": "Storage version of v1api20230101.KeyPolicy\nKeyPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "keyExpirationPeriodInDays": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        },
        "largeFileSharesState": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "minimumTlsVersion": {
          "type": "string"
        },
        "networkAcls": {
          "description": "Storage version of v1api20230101.NetworkRuleSet\nNetwork rule set",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "bypass": {
              "type": "string"
            },
            "defaultAction": {
              "type": "string"
            },
            "ipRules": {
              "items": {
                "description": "Storage version of v1api20230101.IPRule\nIP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "valueFromConfig": {
                    "description": "ConfigMapReference is a reference to a Kubernetes configmap and key in the same namespace as\nthe resource it is on.",
                    "properties": {
                      "key": {
                        "description": "Key is the key in the Kubernetes configmap being referenced",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the name of the Kubernetes configmap being referenced.\nThe configmap must be in the same namespace as the resource",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "items": {
                "description": "Storage version of v1api20230101.ResourceAccessRule\nResource Access Rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "resourceReference": {
                    "description": "ResourceReference: Resource Id",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "tenantId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "items": {
                "description": "Storage version of v1api20230101.VirtualNetworkRule\nVirtual Network rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "reference": {
                    "description": "Reference: Resource ID of a subnet, for example:\n/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "required": [
                  "reference"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "operatorSpec": {
          "description": "Storage version of v1api20230101.StorageAccountOperatorSpec\nDetails for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "configMapExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "configMaps": {
              "description": "Storage version of v1api20230101.StorageAccountOperatorConfigMaps",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blobEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "ConfigMapDestination describes the location to store a single configmap value\nNote: This is similar to: SecretDestination in secrets.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "secretExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secrets": {
              "description": "Storage version of v1api20230101.StorageAccountOperatorSecrets",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blobEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "dfsEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "fileEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key1": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "key2": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "queueEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "tableEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "webEndpoint": {
                  "description": "SecretDestination describes the location to store a single secret value.\nNote: This is similar to: ConfigMapDestination in configmaps.go.\nChanges to one may need to be made to the others as well.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "originalVersion": {
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "publicNetworkAccess": {
          "type": "string"
        },
        "routingPreference": {
          "description": "Storage version of v1api20230101.RoutingPreference\nRouting preference defines the type of network, either microsoft or internet routing to be used to deliver the user\ndata, the default option is microsoft routing",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "publishInternetEndpoints": {
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "type": "boolean"
            },
            "routingChoice": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "Storage version of v1api20230101.SasPolicy\nSasPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "expirationAction": {
              "type": "string"
            },
            "sasExpirationPeriod": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sku": {
          "description": "Storage version of v1api20230101.Sku\nThe SKU of the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "description": "Storage version of v1api20230101.StorageAccount_STATUS\nThe storage account.",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "accessTier": {
          "type": "string"
        },
        "accountMigrationInProgress": {
          "type": "boolean"
        },
        "allowBlobPublicAccess": {
          "type": "boolean"
        },
        "allowCrossTenantReplication": {
          "type": "boolean"
        },
        "allowSharedKeyAccess": {
          "type": "boolean"
        },
        "allowedCopyScope": {
          "type": "string"
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "Storage version of v1api20230101.AzureFilesIdentityBasedAuthentication_STATUS\nSettings for Azure Files identity based authentication.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "activeDirectoryProperties": {
              "description": "Storage version of v1api20230101.ActiveDirectoryProperties_STATUS\nSettings properties for Active Directory (AD).",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "accountType": {
                  "type": "string"
                },
                "azureStorageSid": {
                  "type": "string"
                },
                "domainGuid": {
                  "type": "string"
                },
                "domainName": {
                  "type": "string"
                },
                "domainSid": {
                  "type": "string"
                },
                "forestName": {
                  "type": "string"
                },
                "netBiosDomainName": {
                  "type": "string"
                },
                "samAccountName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "defaultSharePermission": {
              "type": "string"
            },
            "directoryServiceOptions": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "blobRestoreStatus": {
          "description": "Storage version of v1api20230101.BlobRestoreStatus_STATUS\nBlob restore status.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "failureReason": {
              "type": "string"
            },
            "parameters": {
              "description": "Storage version of v1api20230101.BlobRestoreParameters_STATUS\nBlob restore parameters",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blobRanges": {
                  "items": {
                    "description": "Storage version of v1api20230101.BlobRestoreRange_STATUS\nBlob range",
                    "properties": {
                      "$propertyBag": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                        "type": "object"
                      },
                      "endRange": {
                        "type": "string"
                      },
                      "startRange": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "timeToRestore": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "restoreId": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "conditions": {
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "creationTime": {
          "type": "string"
        },
        "customDomain": {
          "description": "Storage version of v1api20230101.CustomDomain_STATUS\nThe custom domain assigned to this storage account. This can be set via Update.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "useSubDomainName": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "defaultToOAuthAuthentication": {
          "type": "boolean"
        },
        "dnsEndpointType": {
          "type": "string"
        },
        "encryption": {
          "description": "Storage version of v1api20230101.Encryption_STATUS\nThe encryption settings on the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "identity": {
              "description": "Storage version of v1api20230101.EncryptionIdentity_STATUS\nEncryption identity for the storage account.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "federatedIdentityClientId": {
                  "type": "string"
                },
                "userAssignedIdentity": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "keySource": {
              "type": "string"
            },
            "keyvaultproperties": {
              "description": "Storage version of v1api20230101.KeyVaultProperties_STATUS\nProperties of key vault.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "currentVersionedKeyExpirationTimestamp": {
                  "type": "string"
                },
                "currentVersionedKeyIdentifier": {
                  "type": "string"
                },
                "keyname": {
                  "type": "string"
                },
                "keyvaulturi": {
                  "type": "string"
                },
                "keyversion": {
                  "type": "string"
                },
                "lastKeyRotationTimestamp": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "requireInfrastructureEncryption": {
              "type": "boolean"
            },
            "services": {
              "description": "Storage version of v1api20230101.EncryptionServices_STATUS\nA list of services that support encryption.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "description": "Storage version of v1api20230101.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "file": {
                  "description": "Storage version of v1api20230101.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "queue": {
                  "description": "Storage version of v1api20230101.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "table": {
                  "description": "Storage version of v1api20230101.EncryptionService_STATUS\nA service that allows server-side encryption to be used.",
                  "properties": {
                    "$propertyBag": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                      "type": "object"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "keyType": {
                      "type": "string"
                    },
                    "lastEnabledTime": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "extendedLocation": {
          "description": "Storage version of v1api20230101.ExtendedLocation_STATUS\nThe complex type of the extended location.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "failoverInProgress": {
          "type": "boolean"
        },
        "geoReplicationStats": {
          "description": "Storage version of v1api20230101.GeoReplicationStats_STATUS\nStatistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when\ngeo-redundant replication is enabled for the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "canFailover": {
              "type": "boolean"
            },
            "canPlannedFailover": {
              "type": "boolean"
            },
            "lastSyncTime": {
              "type": "string"
            },
            "postFailoverRedundancy": {
              "type": "string"
            },
            "postPlannedFailoverRedundancy": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "identity": {
          "description": "Storage version of v1api20230101.Identity_STATUS\nIdentity for the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "principalId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "description": "Storage version of v1api20230101.UserAssignedIdentity_STATUS\nUserAssignedIdentity for the resource.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "principalId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "immutableStorageWithVersioning": {
          "description": "Storage version of v1api20230101.ImmutableStorageAccount_STATUS\nThis property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "enabled": {
              "type": "boolean"
            },
            "immutabilityPolicy": {
              "description": "Storage version of v1api20230101.AccountImmutabilityPolicyProperties_STATUS\nThis defines account-level immutability policy properties.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "allowProtectedAppendWrites": {
                  "type": "boolean"
                },
                "immutabilityPeriodSinceCreationInDays": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "isHnsEnabled": {
          "type": "boolean"
        },
        "isLocalUserEnabled": {
          "type": "boolean"
        },
        "isNfsV3Enabled": {
          "type": "boolean"
        },
        "isSftpEnabled": {
          "type": "boolean"
        },
        "isSkuConversionBlocked": {
          "type": "boolean"
        },
        "keyCreationTime": {
          "description": "Storage version of v1api20230101.KeyCreationTime_STATUS\nStorage account keys creation time.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "key1": {
              "type": "string"
            },
            "key2": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "keyPolicy": {
          "description": "Storage version of v1api20230101.KeyPolicy_STATUS\nKeyPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "keyExpirationPeriodInDays": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        },
        "largeFileSharesState": {
          "type": "string"
        },
        "lastGeoFailoverTime": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "minimumTlsVersion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkAcls": {
          "description": "Storage version of v1api20230101.NetworkRuleSet_STATUS\nNetwork rule set",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "bypass": {
              "type": "string"
            },
            "defaultAction": {
              "type": "string"
            },
            "ipRules": {
              "items": {
                "description": "Storage version of v1api20230101.IPRule_STATUS\nIP rule with specific IP or IP range in CIDR format.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resourceAccessRules": {
              "items": {
                "description": "Storage version of v1api20230101.ResourceAccessRule_STATUS\nResource Access Rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "resourceId": {
                    "type": "string"
                  },
                  "tenantId": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "virtualNetworkRules": {
              "items": {
                "description": "Storage version of v1api20230101.VirtualNetworkRule_STATUS\nVirtual Network rule.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "action": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "primaryEndpoints": {
          "description": "Storage version of v1api20230101.Endpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "blob": {
              "type": "string"
            },
            "dfs": {
              "type": "string"
            },
            "file": {
              "type": "string"
            },
            "internetEndpoints": {
              "description": "Storage version of v1api20230101.StorageAccountInternetEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "Storage version of v1api20230101.StorageAccountMicrosoftEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing\nendpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "queue": {
                  "type": "string"
                },
                "table": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "type": "string"
            },
            "table": {
              "type": "string"
            },
            "web": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "primaryLocation": {
          "type": "string"
        },
        "privateEndpointConnections": {
          "items": {
            "description": "Storage version of v1api20230101.PrivateEndpointConnection_STATUS\nThe Private Endpoint Connection resource.",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "id": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "provisioningState": {
          "type": "string"
        },
        "publicNetworkAccess": {
          "type": "string"
        },
        "routingPreference": {
          "description": "Storage version of v1api20230101.RoutingPreference_STATUS\nRouting preference defines the type of network, either microsoft or internet routing to be used to deliver the user\ndata, the default option is microsoft routing",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "publishInternetEndpoints": {
              "type": "boolean"
            },
            "publishMicrosoftEndpoints": {
              "type": "boolean"
            },
            "routingChoice": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sasPolicy": {
          "description": "Storage version of v1api20230101.SasPolicy_STATUS\nSasPolicy assigned to the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "expirationAction": {
              "type": "string"
            },
            "sasExpirationPeriod": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryEndpoints": {
          "description": "Storage version of v1api20230101.Endpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "blob": {
              "type": "string"
            },
            "dfs": {
              "type": "string"
            },
            "file": {
              "type": "string"
            },
            "internetEndpoints": {
              "description": "Storage version of v1api20230101.StorageAccountInternetEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "microsoftEndpoints": {
              "description": "Storage version of v1api20230101.StorageAccountMicrosoftEndpoints_STATUS\nThe URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing\nendpoint.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "blob": {
                  "type": "string"
                },
                "dfs": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "queue": {
                  "type": "string"
                },
                "table": {
                  "type": "string"
                },
                "web": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "queue": {
              "type": "string"
            },
            "table": {
              "type": "string"
            },
            "web": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "secondaryLocation": {
          "type": "string"
        },
        "sku": {
          "description": "Storage version of v1api20230101.Sku_STATUS\nThe SKU of the storage account.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "tier": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "statusOfPrimary": {
          "type": "string"
        },
        "statusOfSecondary": {
          "type": "string"
        },
        "storageAccountSkuConversionStatus": {
          "description": "Storage version of v1api20230101.StorageAccountSkuConversionStatus_STATUS\nThis defines the sku conversion status object for asynchronous sku conversions.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "endTime": {
              "type": "string"
            },
            "skuConversionStatus": {
              "type": "string"
            },
            "startTime": {
              "type": "string"
            },
            "targetSkuName": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "type": "boolean"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
