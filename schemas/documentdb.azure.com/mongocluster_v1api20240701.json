{
  "description": "Generator information:\n- Generated from: /mongocluster/resource-manager/Microsoft.DocumentDB/MongoCluster/stable/2024-07-01/mongoCluster.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "maxLength": 40,
          "minLength": 3,
          "pattern": "^[a-z0-9]+(-[a-z0-9]+)*",
          "type": "string"
        },
        "location": {
          "description": "Location: The geo-location where the resource lives",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "properties": {
          "description": "Properties: The resource-specific properties for this resource.",
          "properties": {
            "administrator": {
              "description": "Administrator: The local administrator properties for the mongo cluster.",
              "properties": {
                "password": {
                  "description": "Password: The administrator password.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret being referenced.\nThe secret must be in the same namespace as the resource",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "userName": {
                  "description": "UserName: The administrator user name.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "compute": {
              "description": "Compute: The compute properties of the mongo cluster.",
              "properties": {
                "tier": {
                  "description": "Tier: The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values:\n'M30', 'M40'.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "createMode": {
              "description": "CreateMode: The mode to create a mongo cluster.",
              "enum": [
                "Default",
                "GeoReplica",
                "PointInTimeRestore",
                "Replica"
              ],
              "type": "string"
            },
            "highAvailability": {
              "description": "HighAvailability: The high availability properties of the mongo cluster.",
              "properties": {
                "targetMode": {
                  "description": "TargetMode: The target high availability mode requested for the cluster.",
                  "enum": [
                    "Disabled",
                    "SameZone",
                    "ZoneRedundantPreferred"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "previewFeatures": {
              "description": "PreviewFeatures: List of private endpoint connections.",
              "items": {
                "description": "Preview features that can be enabled on a mongo cluster.",
                "enum": [
                  "GeoReplicas"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "publicNetworkAccess": {
              "description": "PublicNetworkAccess: Whether or not public endpoint access is allowed for this mongo cluster.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            "replicaParameters": {
              "description": "ReplicaParameters: The parameters to create a replica mongo cluster.",
              "properties": {
                "sourceLocation": {
                  "description": "SourceLocation: The location of the source cluster",
                  "type": "string"
                },
                "sourceResourceReference": {
                  "description": "SourceResourceReference: The id of the replication source cluster.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "sourceLocation",
                "sourceResourceReference"
              ],
              "type": "object"
            },
            "restoreParameters": {
              "description": "RestoreParameters: The parameters to create a point-in-time restore mongo cluster.",
              "properties": {
                "pointInTimeUTC": {
                  "description": "PointInTimeUTC: UTC point in time to restore a mongo cluster",
                  "type": "string"
                },
                "sourceResourceReference": {
                  "description": "SourceResourceReference: Resource ID to locate the source cluster to restore",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "serverVersion": {
              "description": "ServerVersion: The Mongo DB server version. Defaults to the latest available version if not specified.",
              "type": "string"
            },
            "sharding": {
              "description": "Sharding: The sharding properties of the mongo cluster.",
              "properties": {
                "shardCount": {
                  "description": "ShardCount: Number of shards to provision on the cluster.",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "storage": {
              "description": "Storage: The storage properties of the mongo cluster.",
              "properties": {
                "sizeGb": {
                  "description": "SizeGb: The size of the data disk assigned to each server.",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        }
      },
      "required": [
        "location",
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "description": "Represents a mongo cluster resource.",
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. E.g.\n\"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "type": "string"
        },
        "location": {
          "description": "Location: The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "properties": {
          "description": "Properties: The resource-specific properties for this resource.",
          "properties": {
            "administrator": {
              "description": "Administrator: The local administrator properties for the mongo cluster.",
              "properties": {
                "userName": {
                  "description": "UserName: The administrator user name.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "backup": {
              "description": "Backup: The backup properties of the mongo cluster.",
              "properties": {
                "earliestRestoreTime": {
                  "description": "EarliestRestoreTime: Earliest restore timestamp in UTC ISO8601 format.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "clusterStatus": {
              "description": "ClusterStatus: The status of the mongo cluster.",
              "type": "string"
            },
            "compute": {
              "description": "Compute: The compute properties of the mongo cluster.",
              "properties": {
                "tier": {
                  "description": "Tier: The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values:\n'M30', 'M40'.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "connectionString": {
              "description": "ConnectionString: The default mongo connection string for the cluster.",
              "type": "string"
            },
            "createMode": {
              "description": "CreateMode: The mode to create a mongo cluster.",
              "type": "string"
            },
            "highAvailability": {
              "description": "HighAvailability: The high availability properties of the mongo cluster.",
              "properties": {
                "targetMode": {
                  "description": "TargetMode: The target high availability mode requested for the cluster.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "infrastructureVersion": {
              "description": "InfrastructureVersion: The infrastructure version the cluster is provisioned on.",
              "type": "string"
            },
            "previewFeatures": {
              "description": "PreviewFeatures: List of private endpoint connections.",
              "items": {
                "description": "Preview features that can be enabled on a mongo cluster.",
                "type": "string"
              },
              "type": "array"
            },
            "privateEndpointConnections": {
              "description": "PrivateEndpointConnections: List of private endpoint connections.",
              "items": {
                "description": "The private endpoint connection resource.",
                "properties": {
                  "id": {
                    "description": "Id: Fully qualified resource ID for the resource. E.g.\n\"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "provisioningState": {
              "description": "ProvisioningState: The provisioning state of the mongo cluster.",
              "type": "string"
            },
            "publicNetworkAccess": {
              "description": "PublicNetworkAccess: Whether or not public endpoint access is allowed for this mongo cluster.",
              "type": "string"
            },
            "replica": {
              "description": "Replica: The replication properties for the mongo cluster",
              "properties": {
                "replicationState": {
                  "description": "ReplicationState: The replication link state of the replica cluster.",
                  "type": "string"
                },
                "role": {
                  "description": "Role: The replication role of the cluster",
                  "type": "string"
                },
                "sourceResourceId": {
                  "description": "SourceResourceId: The resource id the source cluster for the replica cluster.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "replicaParameters": {
              "description": "ReplicaParameters: The parameters to create a replica mongo cluster.",
              "properties": {
                "sourceLocation": {
                  "description": "SourceLocation: The location of the source cluster",
                  "type": "string"
                },
                "sourceResourceId": {
                  "description": "SourceResourceId: The id of the replication source cluster.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "restoreParameters": {
              "description": "RestoreParameters: The parameters to create a point-in-time restore mongo cluster.",
              "properties": {
                "pointInTimeUTC": {
                  "description": "PointInTimeUTC: UTC point in time to restore a mongo cluster",
                  "type": "string"
                },
                "sourceResourceId": {
                  "description": "SourceResourceId: Resource ID to locate the source cluster to restore",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "serverVersion": {
              "description": "ServerVersion: The Mongo DB server version. Defaults to the latest available version if not specified.",
              "type": "string"
            },
            "sharding": {
              "description": "Sharding: The sharding properties of the mongo cluster.",
              "properties": {
                "shardCount": {
                  "description": "ShardCount: Number of shards to provision on the cluster.",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "storage": {
              "description": "Storage: The storage properties of the mongo cluster.",
              "properties": {
                "sizeGb": {
                  "description": "SizeGb: The size of the data disk assigned to each server.",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "systemData": {
          "description": "SystemData: Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource.",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The timestamp of resource last modification (UTC)",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Storage version of v1api20240701.MongoCluster\nGenerator information:\n- Generated from: /mongocluster/resource-manager/Microsoft.DocumentDB/MongoCluster/stable/2024-07-01/mongoCluster.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Storage version of v1api20240701.MongoCluster_Spec",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "operatorSpec": {
          "description": "Storage version of v1api20240701.MongoClusterOperatorSpec\nDetails for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "configMapExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "originalVersion": {
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "properties": {
          "description": "Storage version of v1api20240701.MongoClusterProperties\nThe properties of a mongo cluster.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "administrator": {
              "description": "Storage version of v1api20240701.AdministratorProperties\nThe local administrator login properties.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "password": {
                  "description": "SecretReference is a reference to a Kubernetes secret and key in the same namespace as\nthe resource it is on.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret being referenced.\nThe secret must be in the same namespace as the resource",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object"
                },
                "userName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "compute": {
              "description": "Storage version of v1api20240701.ComputeProperties\nThe compute properties of the cluster. This includes the virtual-cores/memory and scaling options applied to servers in\nthe cluster.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "tier": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "createMode": {
              "type": "string"
            },
            "highAvailability": {
              "description": "Storage version of v1api20240701.HighAvailabilityProperties\nThe high availability properties of the cluster.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "targetMode": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "previewFeatures": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "publicNetworkAccess": {
              "type": "string"
            },
            "replicaParameters": {
              "description": "Storage version of v1api20240701.MongoClusterReplicaParameters\nParameters used for replica operations.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "sourceLocation": {
                  "type": "string"
                },
                "sourceResourceReference": {
                  "description": "SourceResourceReference: The id of the replication source cluster.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "sourceResourceReference"
              ],
              "type": "object"
            },
            "restoreParameters": {
              "description": "Storage version of v1api20240701.MongoClusterRestoreParameters\nParameters used for restore operations",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "pointInTimeUTC": {
                  "type": "string"
                },
                "sourceResourceReference": {
                  "description": "SourceResourceReference: Resource ID to locate the source cluster to restore",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "serverVersion": {
              "type": "string"
            },
            "sharding": {
              "description": "Storage version of v1api20240701.ShardingProperties\nThe sharding properties of the cluster. This includes the shard count and scaling options for the cluster.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "shardCount": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "storage": {
              "description": "Storage version of v1api20240701.StorageProperties\nThe storage properties of the cluster. This includes the data storage size and scaling applied to servers in the cluster.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "sizeGb": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "description": "Storage version of v1api20240701.MongoCluster_STATUS\nRepresents a mongo cluster resource.",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "conditions": {
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "description": "Storage version of v1api20240701.MongoClusterProperties_STATUS\nThe properties of a mongo cluster.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "administrator": {
              "description": "Storage version of v1api20240701.AdministratorProperties_STATUS\nThe local administrator login properties.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "userName": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "backup": {
              "description": "Storage version of v1api20240701.BackupProperties_STATUS\nThe backup properties of the cluster. This includes the earliest restore time and retention settings.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "earliestRestoreTime": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "clusterStatus": {
              "type": "string"
            },
            "compute": {
              "description": "Storage version of v1api20240701.ComputeProperties_STATUS\nThe compute properties of the cluster. This includes the virtual-cores/memory and scaling options applied to servers in\nthe cluster.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "tier": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "connectionString": {
              "type": "string"
            },
            "createMode": {
              "type": "string"
            },
            "highAvailability": {
              "description": "Storage version of v1api20240701.HighAvailabilityProperties_STATUS\nThe high availability properties of the cluster.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "targetMode": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "infrastructureVersion": {
              "type": "string"
            },
            "previewFeatures": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "privateEndpointConnections": {
              "items": {
                "description": "Storage version of v1api20240701.PrivateEndpointConnection_STATUS\nThe private endpoint connection resource.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "id": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "provisioningState": {
              "type": "string"
            },
            "publicNetworkAccess": {
              "type": "string"
            },
            "replica": {
              "description": "Storage version of v1api20240701.ReplicationProperties_STATUS\nReplica properties of the mongo cluster.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "replicationState": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "sourceResourceId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "replicaParameters": {
              "description": "Storage version of v1api20240701.MongoClusterReplicaParameters_STATUS\nParameters used for replica operations.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "sourceLocation": {
                  "type": "string"
                },
                "sourceResourceId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "restoreParameters": {
              "description": "Storage version of v1api20240701.MongoClusterRestoreParameters_STATUS\nParameters used for restore operations",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "pointInTimeUTC": {
                  "type": "string"
                },
                "sourceResourceId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "serverVersion": {
              "type": "string"
            },
            "sharding": {
              "description": "Storage version of v1api20240701.ShardingProperties_STATUS\nThe sharding properties of the cluster. This includes the shard count and scaling options for the cluster.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "shardCount": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "storage": {
              "description": "Storage version of v1api20240701.StorageProperties_STATUS\nThe storage properties of the cluster. This includes the data storage size and scaling applied to servers in the cluster.",
              "properties": {
                "$propertyBag": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                  "type": "object"
                },
                "sizeGb": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "systemData": {
          "description": "Storage version of v1api20240701.SystemData_STATUS\nMetadata pertaining to creation and last modification of the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "createdAt": {
              "type": "string"
            },
            "createdBy": {
              "type": "string"
            },
            "createdByType": {
              "type": "string"
            },
            "lastModifiedAt": {
              "type": "string"
            },
            "lastModifiedBy": {
              "type": "string"
            },
            "lastModifiedByType": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
