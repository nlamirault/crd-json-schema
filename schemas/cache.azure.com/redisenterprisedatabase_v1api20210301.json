{
  "description": "Generator information:\n- Generated from: /redisenterprise/resource-manager/Microsoft.Cache/RedisEnterprise/stable/2021-03-01/redisenterprise.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "clientProtocol": {
          "description": "ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is\nTLS-encrypted.",
          "enum": [
            "Encrypted",
            "Plaintext"
          ],
          "type": "string"
        },
        "clusteringPolicy": {
          "description": "ClusteringPolicy: Clustering policy - default is OSSCluster. Specified at create time.",
          "enum": [
            "EnterpriseCluster",
            "OSSCluster"
          ],
          "type": "string"
        },
        "evictionPolicy": {
          "description": "EvictionPolicy: Redis eviction policy - default is VolatileLRU",
          "enum": [
            "AllKeysLFU",
            "AllKeysLRU",
            "AllKeysRandom",
            "NoEviction",
            "VolatileLFU",
            "VolatileLRU",
            "VolatileRandom",
            "VolatileTTL"
          ],
          "type": "string"
        },
        "modules": {
          "description": "Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.",
          "items": {
            "description": "Specifies configuration of a redis module",
            "properties": {
              "args": {
                "description": "Args: Configuration options for the module, e.g. 'ERROR_RATE 0.00 INITIAL_SIZE 400'.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a cache.azure.com/RedisEnterprise resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "persistence": {
          "description": "Persistence: Persistence settings",
          "properties": {
            "aofEnabled": {
              "description": "AofEnabled: Sets whether AOF is enabled.",
              "type": "boolean"
            },
            "aofFrequency": {
              "description": "AofFrequency: Sets the frequency at which data is written to disk.",
              "enum": [
                "1s",
                "always"
              ],
              "type": "string"
            },
            "rdbEnabled": {
              "description": "RdbEnabled: Sets whether RDB is enabled.",
              "type": "boolean"
            },
            "rdbFrequency": {
              "description": "RdbFrequency: Sets the frequency at which a snapshot of the database is created.",
              "enum": [
                "12h",
                "1h",
                "6h"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "description": "Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
          "type": "integer"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "properties": {
        "clientProtocol": {
          "description": "ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is\nTLS-encrypted.",
          "type": "string"
        },
        "clusteringPolicy": {
          "description": "ClusteringPolicy: Clustering policy - default is OSSCluster. Specified at create time.",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "evictionPolicy": {
          "description": "EvictionPolicy: Redis eviction policy - default is VolatileLRU",
          "type": "string"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "modules": {
          "description": "Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.",
          "items": {
            "description": "Specifies configuration of a redis module",
            "properties": {
              "args": {
                "description": "Args: Configuration options for the module, e.g. 'ERROR_RATE 0.00 INITIAL_SIZE 400'.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'",
                "type": "string"
              },
              "version": {
                "description": "Version: The version of the module, e.g. '1.0'.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "persistence": {
          "description": "Persistence: Persistence settings",
          "properties": {
            "aofEnabled": {
              "description": "AofEnabled: Sets whether AOF is enabled.",
              "type": "boolean"
            },
            "aofFrequency": {
              "description": "AofFrequency: Sets the frequency at which data is written to disk.",
              "type": "string"
            },
            "rdbEnabled": {
              "description": "RdbEnabled: Sets whether RDB is enabled.",
              "type": "boolean"
            },
            "rdbFrequency": {
              "description": "RdbFrequency: Sets the frequency at which a snapshot of the database is created.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "description": "Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
          "type": "integer"
        },
        "provisioningState": {
          "description": "ProvisioningState: Current provisioning status of the database",
          "type": "string"
        },
        "resourceState": {
          "description": "ResourceState: Current resource status of the database",
          "type": "string"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Storage version of v1api20210301.RedisEnterpriseDatabase\nGenerator information:\n- Generated from: /redisenterprise/resource-manager/Microsoft.Cache/RedisEnterprise/stable/2021-03-01/redisenterprise.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Storage version of v1api20210301.RedisEnterpriseDatabase_Spec",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "clientProtocol": {
          "type": "string"
        },
        "clusteringPolicy": {
          "type": "string"
        },
        "evictionPolicy": {
          "type": "string"
        },
        "modules": {
          "items": {
            "description": "Storage version of v1api20210301.Module\nSpecifies configuration of a redis module",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "args": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "operatorSpec": {
          "description": "Storage version of v1api20210301.RedisEnterpriseDatabaseOperatorSpec\nDetails for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "configMapExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "originalVersion": {
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a cache.azure.com/RedisEnterprise resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "persistence": {
          "description": "Storage version of v1api20210301.Persistence\nPersistence-related configuration for the RedisEnterprise database",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "aofEnabled": {
              "type": "boolean"
            },
            "aofFrequency": {
              "type": "string"
            },
            "rdbEnabled": {
              "type": "boolean"
            },
            "rdbFrequency": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "type": "integer"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "description": "Storage version of v1api20210301.RedisEnterpriseDatabase_STATUS",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "clientProtocol": {
          "type": "string"
        },
        "clusteringPolicy": {
          "type": "string"
        },
        "conditions": {
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "evictionPolicy": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "modules": {
          "items": {
            "description": "Storage version of v1api20210301.Module_STATUS\nSpecifies configuration of a redis module",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "args": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "persistence": {
          "description": "Storage version of v1api20210301.Persistence_STATUS\nPersistence-related configuration for the RedisEnterprise database",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "aofEnabled": {
              "type": "boolean"
            },
            "aofFrequency": {
              "type": "string"
            },
            "rdbEnabled": {
              "type": "boolean"
            },
            "rdbFrequency": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "type": "integer"
        },
        "provisioningState": {
          "type": "string"
        },
        "resourceState": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Generator information:\n- Generated from: /redisenterprise/resource-manager/Microsoft.Cache/RedisEnterprise/stable/2023-07-01/redisenterprise.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "clientProtocol": {
          "description": "ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is\nTLS-encrypted.",
          "enum": [
            "Encrypted",
            "Plaintext"
          ],
          "type": "string"
        },
        "clusteringPolicy": {
          "description": "ClusteringPolicy: Clustering policy - default is OSSCluster. Specified at create time.",
          "enum": [
            "EnterpriseCluster",
            "OSSCluster"
          ],
          "type": "string"
        },
        "evictionPolicy": {
          "description": "EvictionPolicy: Redis eviction policy - default is VolatileLRU",
          "enum": [
            "AllKeysLFU",
            "AllKeysLRU",
            "AllKeysRandom",
            "NoEviction",
            "VolatileLFU",
            "VolatileLRU",
            "VolatileRandom",
            "VolatileTTL"
          ],
          "type": "string"
        },
        "geoReplication": {
          "description": "GeoReplication: Optional set of properties to configure geo replication for this database.",
          "properties": {
            "groupNickname": {
              "description": "GroupNickname: Name for the group of linked database resources",
              "type": "string"
            },
            "linkedDatabases": {
              "description": "LinkedDatabases: List of database resources to link with this database",
              "items": {
                "description": "Specifies details of a linked database resource.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID of a database resource to link with this database.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "modules": {
          "description": "Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.",
          "items": {
            "description": "Specifies configuration of a redis module",
            "properties": {
              "args": {
                "description": "Args: Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a cache.azure.com/RedisEnterprise resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "persistence": {
          "description": "Persistence: Persistence settings",
          "properties": {
            "aofEnabled": {
              "description": "AofEnabled: Sets whether AOF is enabled.",
              "type": "boolean"
            },
            "aofFrequency": {
              "description": "AofFrequency: Sets the frequency at which data is written to disk.",
              "enum": [
                "1s",
                "always"
              ],
              "type": "string"
            },
            "rdbEnabled": {
              "description": "RdbEnabled: Sets whether RDB is enabled.",
              "type": "boolean"
            },
            "rdbFrequency": {
              "description": "RdbFrequency: Sets the frequency at which a snapshot of the database is created.",
              "enum": [
                "12h",
                "1h",
                "6h"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "description": "Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
          "type": "integer"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "properties": {
        "clientProtocol": {
          "description": "ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is\nTLS-encrypted.",
          "type": "string"
        },
        "clusteringPolicy": {
          "description": "ClusteringPolicy: Clustering policy - default is OSSCluster. Specified at create time.",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "evictionPolicy": {
          "description": "EvictionPolicy: Redis eviction policy - default is VolatileLRU",
          "type": "string"
        },
        "geoReplication": {
          "description": "GeoReplication: Optional set of properties to configure geo replication for this database.",
          "properties": {
            "groupNickname": {
              "description": "GroupNickname: Name for the group of linked database resources",
              "type": "string"
            },
            "linkedDatabases": {
              "description": "LinkedDatabases: List of database resources to link with this database",
              "items": {
                "description": "Specifies details of a linked database resource.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID of a database resource to link with this database.",
                    "type": "string"
                  },
                  "state": {
                    "description": "State: State of the link between the database resources.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "modules": {
          "description": "Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.",
          "items": {
            "description": "Specifies configuration of a redis module",
            "properties": {
              "args": {
                "description": "Args: Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'",
                "type": "string"
              },
              "version": {
                "description": "Version: The version of the module, e.g. '1.0'.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "persistence": {
          "description": "Persistence: Persistence settings",
          "properties": {
            "aofEnabled": {
              "description": "AofEnabled: Sets whether AOF is enabled.",
              "type": "boolean"
            },
            "aofFrequency": {
              "description": "AofFrequency: Sets the frequency at which data is written to disk.",
              "type": "string"
            },
            "rdbEnabled": {
              "description": "RdbEnabled: Sets whether RDB is enabled.",
              "type": "boolean"
            },
            "rdbFrequency": {
              "description": "RdbFrequency: Sets the frequency at which a snapshot of the database is created.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "description": "Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
          "type": "integer"
        },
        "provisioningState": {
          "description": "ProvisioningState: Current provisioning status of the database",
          "type": "string"
        },
        "resourceState": {
          "description": "ResourceState: Current resource status of the database",
          "type": "string"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Storage version of v1api20230701.RedisEnterpriseDatabase\nGenerator information:\n- Generated from: /redisenterprise/resource-manager/Microsoft.Cache/RedisEnterprise/stable/2023-07-01/redisenterprise.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Storage version of v1api20230701.RedisEnterpriseDatabase_Spec",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "clientProtocol": {
          "type": "string"
        },
        "clusteringPolicy": {
          "type": "string"
        },
        "evictionPolicy": {
          "type": "string"
        },
        "geoReplication": {
          "description": "Storage version of v1api20230701.DatabaseProperties_GeoReplication",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "groupNickname": {
              "type": "string"
            },
            "linkedDatabases": {
              "items": {
                "description": "Storage version of v1api20230701.LinkedDatabase\nSpecifies details of a linked database resource.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "reference": {
                    "description": "Reference: Resource ID of a database resource to link with this database.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "modules": {
          "items": {
            "description": "Storage version of v1api20230701.Module\nSpecifies configuration of a redis module",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "args": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "operatorSpec": {
          "description": "Storage version of v1api20230701.RedisEnterpriseDatabaseOperatorSpec\nDetails for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "configMapExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "originalVersion": {
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a cache.azure.com/RedisEnterprise resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "persistence": {
          "description": "Storage version of v1api20230701.Persistence\nPersistence-related configuration for the RedisEnterprise database",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "aofEnabled": {
              "type": "boolean"
            },
            "aofFrequency": {
              "type": "string"
            },
            "rdbEnabled": {
              "type": "boolean"
            },
            "rdbFrequency": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "type": "integer"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "description": "Storage version of v1api20230701.RedisEnterpriseDatabase_STATUS",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "clientProtocol": {
          "type": "string"
        },
        "clusteringPolicy": {
          "type": "string"
        },
        "conditions": {
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "evictionPolicy": {
          "type": "string"
        },
        "geoReplication": {
          "description": "Storage version of v1api20230701.DatabaseProperties_GeoReplication_STATUS",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "groupNickname": {
              "type": "string"
            },
            "linkedDatabases": {
              "items": {
                "description": "Storage version of v1api20230701.LinkedDatabase_STATUS\nSpecifies details of a linked database resource.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "id": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "modules": {
          "items": {
            "description": "Storage version of v1api20230701.Module_STATUS\nSpecifies configuration of a redis module",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "args": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "persistence": {
          "description": "Storage version of v1api20230701.Persistence_STATUS\nPersistence-related configuration for the RedisEnterprise database",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "aofEnabled": {
              "type": "boolean"
            },
            "aofFrequency": {
              "type": "string"
            },
            "rdbEnabled": {
              "type": "boolean"
            },
            "rdbFrequency": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "type": "integer"
        },
        "provisioningState": {
          "type": "string"
        },
        "resourceState": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Generator information:\n- Generated from: /redisenterprise/resource-manager/Microsoft.Cache/RedisEnterprise/stable/2025-04-01/redisenterprise.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "accessKeysAuthentication": {
          "description": "AccessKeysAuthentication: This property can be Enabled/Disabled to allow or deny access with the current access keys.\nCan be updated even after database is created.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "clientProtocol": {
          "description": "ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is\nTLS-encrypted.",
          "enum": [
            "Encrypted",
            "Plaintext"
          ],
          "type": "string"
        },
        "clusteringPolicy": {
          "description": "ClusteringPolicy: Clustering policy - default is OSSCluster. This property must be chosen at create time, and cannot be\nchanged without deleting the database.",
          "enum": [
            "EnterpriseCluster",
            "OSSCluster"
          ],
          "type": "string"
        },
        "deferUpgrade": {
          "description": "DeferUpgrade: Option to defer upgrade when newest version is released - default is NotDeferred. Learn more:\nhttps://aka.ms/redisversionupgrade",
          "enum": [
            "Deferred",
            "NotDeferred"
          ],
          "type": "string"
        },
        "evictionPolicy": {
          "description": "EvictionPolicy: Redis eviction policy - default is VolatileLRU",
          "enum": [
            "AllKeysLFU",
            "AllKeysLRU",
            "AllKeysRandom",
            "NoEviction",
            "VolatileLFU",
            "VolatileLRU",
            "VolatileRandom",
            "VolatileTTL"
          ],
          "type": "string"
        },
        "geoReplication": {
          "description": "GeoReplication: Optional set of properties to configure geo replication for this database.",
          "properties": {
            "groupNickname": {
              "description": "GroupNickname: Name for the group of linked database resources",
              "type": "string"
            },
            "linkedDatabases": {
              "description": "LinkedDatabases: List of database resources to link with this database",
              "items": {
                "description": "Specifies details of a linked database resource.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID of a database resource to link with this database.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "modules": {
          "description": "Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.",
          "items": {
            "description": "Specifies configuration of a redis module",
            "properties": {
              "args": {
                "description": "Args: Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a cache.azure.com/RedisEnterprise resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "persistence": {
          "description": "Persistence: Persistence settings",
          "properties": {
            "aofEnabled": {
              "description": "AofEnabled: Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled.",
              "type": "boolean"
            },
            "aofFrequency": {
              "description": "AofFrequency: Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that\nthe 'always' setting is deprecated, because of its performance impact.",
              "enum": [
                "1s",
                "always"
              ],
              "type": "string"
            },
            "rdbEnabled": {
              "description": "RdbEnabled: Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled.",
              "type": "boolean"
            },
            "rdbFrequency": {
              "description": "RdbFrequency: Sets the frequency at which a snapshot of the database is created.",
              "enum": [
                "12h",
                "1h",
                "6h"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "description": "Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
          "type": "integer"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "properties": {
        "accessKeysAuthentication": {
          "description": "AccessKeysAuthentication: This property can be Enabled/Disabled to allow or deny access with the current access keys.\nCan be updated even after database is created.",
          "type": "string"
        },
        "clientProtocol": {
          "description": "ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is\nTLS-encrypted.",
          "type": "string"
        },
        "clusteringPolicy": {
          "description": "ClusteringPolicy: Clustering policy - default is OSSCluster. This property must be chosen at create time, and cannot be\nchanged without deleting the database.",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "deferUpgrade": {
          "description": "DeferUpgrade: Option to defer upgrade when newest version is released - default is NotDeferred. Learn more:\nhttps://aka.ms/redisversionupgrade",
          "type": "string"
        },
        "evictionPolicy": {
          "description": "EvictionPolicy: Redis eviction policy - default is VolatileLRU",
          "type": "string"
        },
        "geoReplication": {
          "description": "GeoReplication: Optional set of properties to configure geo replication for this database.",
          "properties": {
            "groupNickname": {
              "description": "GroupNickname: Name for the group of linked database resources",
              "type": "string"
            },
            "linkedDatabases": {
              "description": "LinkedDatabases: List of database resources to link with this database",
              "items": {
                "description": "Specifies details of a linked database resource.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID of a database resource to link with this database.",
                    "type": "string"
                  },
                  "state": {
                    "description": "State: State of the link between the database resources.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "modules": {
          "description": "Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.",
          "items": {
            "description": "Specifies configuration of a redis module",
            "properties": {
              "args": {
                "description": "Args: Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'",
                "type": "string"
              },
              "version": {
                "description": "Version: The version of the module, e.g. '1.0'.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "persistence": {
          "description": "Persistence: Persistence settings",
          "properties": {
            "aofEnabled": {
              "description": "AofEnabled: Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled.",
              "type": "boolean"
            },
            "aofFrequency": {
              "description": "AofFrequency: Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that\nthe 'always' setting is deprecated, because of its performance impact.",
              "type": "string"
            },
            "rdbEnabled": {
              "description": "RdbEnabled: Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled.",
              "type": "boolean"
            },
            "rdbFrequency": {
              "description": "RdbFrequency: Sets the frequency at which a snapshot of the database is created.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "description": "Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
          "type": "integer"
        },
        "provisioningState": {
          "description": "ProvisioningState: Current provisioning status of the database",
          "type": "string"
        },
        "redisVersion": {
          "description": "RedisVersion: Version of Redis the database is running on, e.g. '6.0'",
          "type": "string"
        },
        "resourceState": {
          "description": "ResourceState: Current resource status of the database",
          "type": "string"
        },
        "systemData": {
          "description": "SystemData: Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource.",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The timestamp of resource last modification (UTC)",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
{
  "description": "Storage version of v1api20250401.RedisEnterpriseDatabase\nGenerator information:\n- Generated from: /redisenterprise/resource-manager/Microsoft.Cache/RedisEnterprise/stable/2025-04-01/redisenterprise.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Storage version of v1api20250401.RedisEnterpriseDatabase_Spec",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "accessKeysAuthentication": {
          "type": "string"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "clientProtocol": {
          "type": "string"
        },
        "clusteringPolicy": {
          "type": "string"
        },
        "deferUpgrade": {
          "type": "string"
        },
        "evictionPolicy": {
          "type": "string"
        },
        "geoReplication": {
          "description": "Storage version of v1api20250401.DatabaseProperties_GeoReplication",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "groupNickname": {
              "type": "string"
            },
            "linkedDatabases": {
              "items": {
                "description": "Storage version of v1api20250401.LinkedDatabase\nSpecifies details of a linked database resource.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "reference": {
                    "description": "Reference: Resource ID of a database resource to link with this database.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "modules": {
          "items": {
            "description": "Storage version of v1api20250401.Module\nSpecifies configuration of a redis module",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "args": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "operatorSpec": {
          "description": "Storage version of v1api20250401.RedisEnterpriseDatabaseOperatorSpec\nDetails for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "configMapExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "secretExpressions": {
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "originalVersion": {
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a cache.azure.com/RedisEnterprise resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "persistence": {
          "description": "Storage version of v1api20250401.Persistence\nPersistence-related configuration for the Redis Enterprise database",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "aofEnabled": {
              "type": "boolean"
            },
            "aofFrequency": {
              "type": "string"
            },
            "rdbEnabled": {
              "type": "boolean"
            },
            "rdbFrequency": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "type": "integer"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "status": {
      "description": "Storage version of v1api20250401.RedisEnterpriseDatabase_STATUS",
      "properties": {
        "$propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
          "type": "object"
        },
        "accessKeysAuthentication": {
          "type": "string"
        },
        "clientProtocol": {
          "type": "string"
        },
        "clusteringPolicy": {
          "type": "string"
        },
        "conditions": {
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "deferUpgrade": {
          "type": "string"
        },
        "evictionPolicy": {
          "type": "string"
        },
        "geoReplication": {
          "description": "Storage version of v1api20250401.DatabaseProperties_GeoReplication_STATUS",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "groupNickname": {
              "type": "string"
            },
            "linkedDatabases": {
              "items": {
                "description": "Storage version of v1api20250401.LinkedDatabase_STATUS\nSpecifies details of a linked database resource.",
                "properties": {
                  "$propertyBag": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                    "type": "object"
                  },
                  "id": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "modules": {
          "items": {
            "description": "Storage version of v1api20250401.Module_STATUS\nSpecifies configuration of a redis module",
            "properties": {
              "$propertyBag": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
                "type": "object"
              },
              "args": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "persistence": {
          "description": "Storage version of v1api20250401.Persistence_STATUS\nPersistence-related configuration for the Redis Enterprise database",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "aofEnabled": {
              "type": "boolean"
            },
            "aofFrequency": {
              "type": "string"
            },
            "rdbEnabled": {
              "type": "boolean"
            },
            "rdbFrequency": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "port": {
          "type": "integer"
        },
        "provisioningState": {
          "type": "string"
        },
        "redisVersion": {
          "type": "string"
        },
        "resourceState": {
          "type": "string"
        },
        "systemData": {
          "description": "Storage version of v1api20250401.SystemData_STATUS\nMetadata pertaining to creation and last modification of the resource.",
          "properties": {
            "$propertyBag": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage\nresources, allowing for full fidelity round trip conversions",
              "type": "object"
            },
            "createdAt": {
              "type": "string"
            },
            "createdBy": {
              "type": "string"
            },
            "createdByType": {
              "type": "string"
            },
            "lastModifiedAt": {
              "type": "string"
            },
            "lastModifiedBy": {
              "type": "string"
            },
            "lastModifiedByType": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
